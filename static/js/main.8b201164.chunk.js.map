{"version":3,"sources":["components/header/search-bar.jsx","components/header/top-nav.jsx","components/form/copy-button.jsx","components/form/code.jsx","components/form/textarea.jsx","components/form/style-form.jsx","components/style-list/style.jsx","components/style-list/style-list.jsx","components/form/color-form.jsx","components/color-list/color.jsx","components/color-list/color-list.jsx","App.js","serviceWorker.js","index.js"],"names":["SearchBar","state","color","handleChange","this","props","className","type","onChange","placeholder","spellCheck","onFocus","setState","onBlur","style","border","React","Component","TopNav","href","target","rel","CopyButton","handleCopy","text","code","document","querySelector","innerText","input","createElement","value","body","appendChild","select","execCommand","removeChild","onClick","Code","font","size","weight","decoration","category","id","split","join","Textarea","e","field","handleSubmit","preventDefault","isValid","closeEditForm","handleBlur","length","parseInt","sizeClass","px","slice","num","toString","colorClass","fonts","weights","textarea","createRef","current","focus","fetch","process","then","response","json","googleFonts","i","push","items","family","variants","filter","regularIdx","indexOf","link","classList","add","getElementsByTagName","prevProps","prevState","splitIdx","closeCreateForm","map","key","maxLength","ref","fontFamily","fontSize","fontWeight","fontStyle","textDecoration","StyleForm","Style","editing","handleDelete","whiteSpace","StyleList","styles","includes","sort","string","Object","entries","forEach","ColorForm","message","messageColor","handleClose","data","name","rgb","fraction","r","hex","clean","toLowerCase","backgroundColor","onKeyDown","Color","show","copy","setAttribute","result","stopPropagation","onMouseEnter","onMouseLeave","ColorList","adding","window","addEventListener","closest","colors","App","searchText","styleId","colorName","localStorage","setItem","JSON","stringify","filtered","creating","parse","getItem","defaultColors","filteredStyles","filteredColors","reverse","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.8b201164.chunk.js","sourcesContent":["import React from 'react';\nimport './search-bar.css';\n\nexport default class SearchBar extends React.Component {\n    state = { color: \"\" };\n\n    render() {\n        const { handleChange } = this.props;\n        const { color } = this.state;\n\n        return (\n            <div className=\"search\">\n                <input\n                    type=\"search\"\n                    onChange={handleChange}\n                    placeholder=\"Search by color, font or text\"\n                    spellCheck=\"false\"\n                    onFocus={() => this.setState({ color: \"0081ff\" })}\n                    onBlur={() => this.setState({ color: \"e6e6e6\" })}\n                    style={{ border: `1px solid #${color}` }}\n                />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './top-nav.css';\nimport SearchBar from './search-bar';\n\nexport const TopNav = props => (\n    <nav className=\"top-nav-container\">\n        <nav className=\"top-nav\">\n            <div className=\"logo rainbow\">\n                <i className=\"fas fa-paint-brush\"></i>\n                palette\n            </div>\n            <SearchBar handleChange={props.handleChange} />\n            <div className=\"icons\">\n                <a\n                    href=\"https://juneseong.com\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"far fa-folder\"></i>\n                </a>\n                <a\n                    href=\"https://github.com/juneseong/palette\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-github\"></i>\n                </a>\n                <a\n                    href=\"https://www.linkedin.com/in/juneseong\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-linkedin-in\"></i>\n                </a>\n                <a\n                    href=\"https://angel.co/u/june-seong\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-angellist\"></i>\n                </a>\n            </div>\n        </nav>\n    </nav>\n)","import React from 'react';\n\nexport default class CopyButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { text: \"Copy\" };\n    }\n\n    componentWillUnmount() {\n        this.setState({ text: \"Copy\" });\n    }\n\n    handleCopy = () => {\n        this.setState({ text: \"Copied!\" });\n\n        const code = this.props.type === \"html\" \n            ? document.querySelector(\"#html-code\").innerText\n            : document.querySelector(\"#css-code\").innerText;\n\n        const input = document.createElement(\"textarea\");\n        input.value = code;\n        document.body.appendChild(input);\n        input.select();\n        document.execCommand(\"copy\");\n        document.body.removeChild(input);\n    } \n    \n    render() {\n        const { text } = this.state;\n\n        return (\n            <button onClick={this.handleCopy}>\n                {text}\n            </button>\n        )\n    }\n}","import React from 'react';\nimport './code.css';\nimport CopyButton from './copy-button';\n\nexport const Code = ({ ...props }) => {\n    const { font, size, weight, style, decoration, color, category } = props.style;\n\n    return (\n        <div className=\"code-container\">\n            <div className=\"code-instruction-code\">\n                <div className=\"code-instruction\">\n                    <CopyButton type=\"html\" /> and paste the code into the {\"<head>\"} of your html.\n                </div>\n                <div className=\"code\" id=\"html-code\">\n                    {`<link href=\"https://fonts.googleapis.com/css2?family=`}\n                    <span>{font.split(\" \").join(\"+\") + `:wght@` + weight}</span>\n                    {`&display=swap\" rel=\"stylesheet\">`}\n                </div>\n            </div>\n            <div className=\"code-instruction-code\">\n                <div className=\"code-instruction\">\n                    <CopyButton type=\"css\" /> and paste the code into your CSS file.\n                </div>\n                <div className=\"code\" id=\"css-code\">\n                    {font ? <>{`font-family: ${font}, ${category};`}<br /></> : null}\n                    {size ? <>{`font-size: ${size};`}<br /></> : null}\n                    {weight ? <>{`font-weight: ${weight};`}<br /></> : null}\n                    {style !== \"normal\" ? <>{`font-style: ${style};`}<br /></> : null}\n                    {decoration !== \"none\" ? <>{`text-decoration: ${decoration};`}<br /></> : null}\n                    {color ? <>{`color: #${color};`}<br /></> : null}\n                </div>\n            </div>\n        </div>\n    )\n};","import React from 'react';\nimport './textarea.css';\nimport { Code } from './code';\n\nexport default class Textarea extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let text, font, size, weight, style, decoration, color;\n\n        if (props.type === \"create\") {\n            text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam a diam eleifend mauris porta posuere a eu lectus. Suspendisse pellentesque diam tempor enim rutrum pretium.\";\n            font = \"Roboto\";\n            size = \"15px\";\n            weight = \"400\";\n            style = \"normal\";\n            decoration = \"none\";\n            color = \"000000\";\n        } else {\n            text = props.style.text;\n            font = props.style.font;\n            size = props.style.size;\n            weight = props.style.weight;\n            style = props.style.style;\n            decoration = props.style.decoration;\n            color = props.style.color;\n        }\n\n        this.state = { text, font, size, weight, style, decoration, color, \n            fonts: null, \n            weights: null,\n            category: null,\n            sizeClass: \"\",\n            colorClass: \"\"\n        };\n\n        this.textarea = React.createRef();\n    }\n\n    componentDidMount() {\n        this.textarea.current.focus();\n\n        fetch(`https://www.googleapis.com/webfonts/v1/webfonts?sort=popularity&key=${process.env.REACT_APP_API_KEY}`)\n            .then(response => response.json())\n            .then(googleFonts => {           \n                const fonts = [];\n                for (let i = 0; i < 40; i++) fonts.push(googleFonts.items[i]);\n                this.setState({ fonts }); \n\n                for (let i = 0; i < fonts.length; i++) {\n                    const font = fonts[i];\n                    let { family, variants } = font;\n\n                    if (family === this.state.font) {\n                        const weights = variants.filter(weight => weight.length < 4 || weight === \"regular\");\n                        const regularIdx = weights.indexOf(\"regular\");\n                        if (regularIdx !== null) weights[regularIdx] = \"400\";\n\n                        const { category } = font;\n                        this.setState({ category, weights });\n\n                        break;\n                    }\n                }\n        });\n\n        let link = document.querySelector(\".google-fonts-link\");\n\n        if (!link) {\n            const href = \"https://fonts.googleapis.com/css2?family=Roboto&display=swap\";\n            link = document.createElement(\"link\");\n            link.rel = \"stylesheet\";\n            link.classList.add(\"google-fonts-link\");\n            document.getElementsByTagName(\"head\")[0].appendChild(link);\n            link.href = href;\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        let { font, weight, fonts } = this.state;\n\n        if (prevState.font !== font || prevState.weight !== weight) {\n            const link = document.querySelector(\".google-fonts-link\");\n            let href = link.href;\n            if (font.split(\" \").length > 1) font = font.split(\" \").join(\"+\");\n            const splitIdx = href.indexOf(\"&display=swap\");\n            href = `${href.slice(0, splitIdx)}&family=${font}:wght@${weight}${href.slice(splitIdx)}`;\n            link.href = href;\n\n            if (prevState.weight === weight) {\n                for (let i = 0; i < fonts.length; i++) {\n                    const font = fonts[i];\n                    let { family, variants } = font;\n\n                    if (family === this.state.font) {\n                        const weights = variants.filter(weight => weight.length < 4 || weight === \"regular\");\n                        const regularIdx = weights.indexOf(\"regular\");\n                        if (regularIdx !== null) weights[regularIdx] = \"400\";\n\n                        const { category } = font;\n                        this.setState({ category, weights });\n\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    handleChange = (e, field) => {\n        this.setState({ [field]: e.target.value });\n    }\n\n    handleSubmit = (e, input) => {\n        e.preventDefault();\n\n        if (this.isValid()) {\n            const { handleSubmit, style, closeEditForm } = this.props;\n            handleSubmit(\"styles\", input, style.id);\n            closeEditForm();\n        }\n    }\n\n    handleBlur = () => {\n        const { size } = this.state;\n\n        if ((size.length === 1 || size.length === 2)\n            && (parseInt(size) > 0 || parseInt(size) < 100)) {\n            this.setState({ size: size + \"px\" });\n        }\n\n        this.setState({ sizeClass: \"\" });\n    }\n\n    isValid = () => {\n        const { color, size } = this.state;\n        const px = size.slice(size.length - 2);\n        const num = size.slice(0, size.length - 2);\n        \n        if (px !== \"px\" || num !== parseInt(num).toString()) {\n            this.setState({ sizeClass: \"error\" });\n            return false;\n        } else if (!(color.length === 3 || color.length === 6)) {\n            this.setState({ colorClass: \"error\" });\n            return false;\n        }\n        \n        return true;\n    }\n\n    render() {\n        const { type, handleSubmit, closeCreateForm, closeEditForm, code } = this.props;\n        const { text, font, size, weight, style, decoration, color, fonts, weights, sizeClass, colorClass } = this.state;\n\n        return (\n            <>\n                {\n                    code \n                        ? <Code style={this.state} />\n                        : <form>\n                            <div className=\"form-style\">\n                                <div>\n                                    <i className=\"fas fa-font\"></i>\n                                    <select\n                                        className=\"font-select\" value={font}\n                                        onChange={e => this.setState({ font: e.target.value })}>\n                                        {\n                                            fonts\n                                                ? fonts.map((font, i) => (\n                                                    <option key={`font-option-${i}`}>\n                                                        {font.family}\n                                                    </option>\n                                                )) : null\n                                        }\n                                    </select>\n                                </div>\n                                <div>\n                                    <span className=\"material-icons\">\n                                        format_size\n                                    </span>\n                                    <input\n                                        className={`size-input ${sizeClass}`}\n                                        value={size}\n                                        onChange={e => this.setState({ size: e.target.value })}\n                                        type=\"text\"\n                                        maxLength=\"4\"\n                                        spellCheck=\"false\"\n                                        onFocus={() => this.setState({ sizeClass: \"focused\" })}\n                                        onBlur={this.handleBlur}\n                                    />\n                                </div>\n                                <div>\n                                    <i className=\"fas fa-bold\"></i>\n                                    <select\n                                        value={weight}\n                                        onChange={e => this.setState({ weight: e.target.value })}>\n                                        {\n                                            weights\n                                                ? weights.map((weight, i) => (\n                                                    <option key={`weight-option-${i}`}>\n                                                        {weight}\n                                                    </option>\n                                                )) : null\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"font-style-icon\">\n                                    <i\n                                        className=\"fas fa-italic\"\n                                        style={{ color: style === \"italic\" ? \"#0081ff\" : \"\" }}\n                                        onClick={() => this.setState({ style: style === \"normal\" ? \"italic\" : \"normal\" })}>\n                                    </i>\n                                    <i\n                                        className=\"fas fa-underline\"\n                                        style={{ color: decoration === \"underline\" ? \"#0081ff\" : \"\" }}\n                                        onClick={() => this.setState({ decoration: decoration === \"underline\" ? \"none\" : \"underline\" })}>\n                                    </i>\n                                </div>\n                                <div className={`color-input-form ${colorClass}`}>\n                                    <i className=\"fas fa-palette\"></i>\n                                    #\n                                    <input\n                                        className=\"color-input\"\n                                        type=\"text\"\n                                        maxLength=\"6\"\n                                        spellCheck=\"false\"\n                                        value={color}\n                                        onChange={e => this.setState({ color: e.target.value })}\n                                        onFocus={() => this.setState({ colorClass: \"focused\" })}\n                                        onBlur={() => this.setState({ colorClass: \"\" })}\n                                    />\n                                </div>\n                            </div>\n                            <textarea\n                                ref={this.textarea}\n                                placeholder=\"Add text\"\n                                value={text}\n                                onChange={e => this.handleChange(e, \"text\")}\n                                spellCheck=\"false\"\n                                style={{\n                                    fontFamily: font,\n                                    fontSize: size,\n                                    fontWeight: weight,\n                                    fontStyle: style,\n                                    textDecoration: decoration,\n                                    color: \"#\" + color\n                                }}\n                            />\n                        </form>\n                }\n                {\n                    type === \"create\"\n                        ? <div className=\"cancel-save-btn\">\n                            <button onClick={closeCreateForm}>\n                                Cancel\n                            </button>\n                            <button onClick={() => this.isValid() ? handleSubmit(\"styles\", this.state) : null}>\n                                Save\n                            </button>\n                        </div>\n                        : <div className=\"cancel-save-btn\">\n                            <button onClick={closeEditForm}>\n                                Cancel\n                            </button>\n                            <button onClick={e => this.handleSubmit(e, this.state)}>\n                                Save\n                            </button>\n                        </div>\n                }\n            </>\n        )\n    }\n}","import React from 'react';\nimport './style-form.css';\nimport Textarea from './textarea';\n\nexport default class StyleForm extends React.Component {\n    state = { code: false };\n    \n    render() {\n        const { type, handleSubmit, closeCreateForm, closeEditForm, style } = this.props;\n        const { code } = this.state;\n\n        return (\n            <div className=\"form-container\">\n                <div className=\"form-header\">\n                    <ul>\n                        <li \n                            className={!code ? \"active\" : \"\"}\n                            onClick={() => this.setState({ code: false })}>\n                            {type === \"create\" ? \"Add Style\" : \"Edit Style\"}\n                        </li>\n                        <li className={code ? \"active\" : \"\"}\n                            onClick={() => this.setState({ code: true })}>\n                            Code\n                        </li>\n                        <li></li>\n                    </ul>\n                </div>\n                <Textarea \n                    handleSubmit={handleSubmit}\n                    closeCreateForm={closeCreateForm}\n                    closeEditForm={closeEditForm}\n                    type={type}\n                    style={style}\n                    code={code}\n                />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './style.css';\nimport StyleForm from '../form/style-form';\n\nexport default class Style extends React.Component {\n    state = { editing: false };\n\n    closeEditForm = () => {\n        this.setState({ editing: false });\n    }\n\n    render() {\n        const { style, handleDelete, handleSubmit } = this.props;\n        const { editing } = this.state;\n\n        return (\n            <>\n                {\n                    editing\n                        ? <StyleForm \n                            type=\"edit\" \n                            style={style} \n                            closeEditForm={this.closeEditForm} \n                            handleSubmit={handleSubmit}\n                        />\n                        : <div className=\"style\">\n                            <div className=\"edit-delete-style\">\n                                <button onClick={() => this.setState({ editing: true })}>\n                                    Edit\n                                </button>\n                                <button onClick={() => handleDelete(style.id, \"styles\")}>\n                                    Delete\n                                </button>\n                            </div>\n                            <span\n                                style={{\n                                    fontFamily: style.font,\n                                    fontSize: style.size,\n                                    fontWeight: style.weight,\n                                    fontStyle: style.style,\n                                    textDecoration: style.decoration,\n                                    color: \"#\" + style.color,\n                                    whiteSpace: \"pre-line\"\n                                }}>\n                                {style.text}\n                            </span>\n                            <div className=\"style-label\">\n                                {`${style.font} — ${style.size}, #${style.color}`}\n                            </div>\n                        </div>\n                }\n            </>\n        )\n    }\n}","import React from 'react';\nimport Style from './style';\nimport './style-list.css';\n\nexport default class StyleList extends React.Component {\n    componentDidUpdate(prevProps) {\n        const { styles }  = this.props;\n       \n        if (styles.length > 0) {\n            if (styles !== prevProps.styles) {\n                const fonts = {};\n                \n                for (let i = 0; i < styles.length; i++) {\n                    const { style } = styles[i];\n                    const font = style.font;\n                    const weight = style.weight;\n\n                    if (!fonts[font]) fonts[font] = [];\n                    if (!fonts[font].includes(weight)) fonts[font].push(weight);\n                    if (fonts[font].length > 1) fonts[font].sort();\n                }\n\n                let href = [`https://fonts.googleapis.com/css2?`, `&display=swap`];\n                const string = [];\n\n                Object.entries(fonts).forEach(([font, weights], i) => {\n                    if (font.split(\" \").length > 1) font = font.split(\" \").join(\"+\");\n                    weights = weights.join(\";\");\n                    i === 0 ? string.push(`family=${font}`) : string.push(`&family=${font}`);\n                    string.push(`:wght@${weights}`);\n                });\n\n                let link = document.querySelector(\".google-fonts-link\");\n\n                if (!link) {\n                    link = document.createElement(\"link\");\n                    link.rel = \"stylesheet\";\n                    link.classList.add(\"google-fonts-link\");\n                    document.getElementsByTagName(\"head\")[0].appendChild(link);\n                }\n\n                href = href.join(string.join(\"\"));\n                link.href = href;\n            }\n        }\n    }\n\n    render() {\n        const { handleDelete, handleSubmit, styles } = this.props;\n\n        return (\n            <div className=\"style-list\">\n                {\n                    styles.map(({ style }, i) =>\n                        <Style\n                            key={`style-${i}`}\n                            style={style}\n                            handleDelete={handleDelete}\n                            handleSubmit={handleSubmit}\n                        />\n                    )\n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './color-form.css';\n\nexport default class ColorForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { \n            color: \"\", \n            message: \"Press enter to save.\",\n            messageColor: \"\"\n        };\n\n        this.textarea = React.createRef();\n    }\n\n    componentDidMount() {\n        this.textarea.current.focus();\n    }\n\n    handleSubmit() {\n        const { handleSubmit, handleClose } = this.props;\n        const { color } = this.state;\n\n        fetch(`https://www.thecolorapi.com/id?hex=${color}`)\n            .then(response => response.json())\n            .then(data => {\n                const name = data.name.value;\n            \n                if (data.rgb.fraction.r !== null) {\n                    handleSubmit(\"colors\", data.hex.clean.toLowerCase(), null, name);\n                    handleClose();\n                } else {\n                    this.setState({\n                        message: \"Invalid color\",\n                        messageColor: \"#ff0000\"\n                    });\n                }\n            });\n    }\n\n    render() {\n        const { handleClose } = this.props;\n        const { color, message, messageColor } = this.state;\n\n        return (\n            <div className=\"add-color\">\n                <div\n                    className=\"colored\"\n                    style={{ backgroundColor: `#${color}` }}>\n                </div>\n                <div id=\"color-form\" className=\"add-color-form\">\n                    <div className=\"color-code\">\n                        #\n                        <input\n                            ref={this.textarea}\n                            type=\"text\"\n                            spellCheck=\"false\"\n                            placeholder=\"000000\"\n                            maxLength=\"6\"\n                            onChange={e => this.setState({ color: e.target.value })}\n                            value={color}\n                            onKeyDown={e => e.key === \"Enter\" \n                                ? this.handleSubmit()\n                                : null}\n                        />\n                        <i\n                            className=\"fas fa-times\"\n                            onClick={handleClose}>\n                        </i>\n                    </div>\n                    <span \n                        className=\"color-code-instruction\"\n                        style={{ color: messageColor }}>\n                        {message}\n                    </span>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './color.css';\n\nexport default class Color extends React.Component {\n    state = { show: false, copy: \"Copy\" };\n\n    copy = () => {\n        this.setState({ copy: \"Copied!\" });\n\n        const input = document.createElement(\"input\");\n        input.setAttribute(\"value\", this.props.color.value);\n        document.body.appendChild(input);\n        input.select();\n        const result = document.execCommand(\"copy\");\n        document.body.removeChild(input);\n        return result;\n    };\n\n    handleDelete = e => {\n        const { color, handleDelete } = this.props;\n        e.stopPropagation();\n        handleDelete(color.id, \"colors\");\n    }\n\n    render() {\n        const { show, copy } = this.state;\n        const { color } = this.props;\n\n        return (\n            <div>\n                <div \n                    className=\"colored\"\n                    style={{ backgroundColor: `#${color.value}` }}\n                    onMouseEnter={() => this.setState({ show: true })}\n                    onMouseLeave={() => this.setState({ show: false, copy: \"Copy\" })}>\n                    {\n                        show \n                        ? <div \n                            className=\"colored-dark\"\n                            onClick={this.copy}>\n                            <i \n                                className=\"fas fa-times\"\n                                onClick={e => this.handleDelete(e)}>\n                            </i>\n                            <div className=\"color-copy\">\n                                <p>{copy}</p>\n                            </div>\n                        </div> \n                        : null\n                    }\n                </div>\n                <div>\n                    <p className=\"color-name\">{color.name}</p>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './color-list.css';\nimport ColorForm from '../form/color-form';\nimport Color from './color';\n\nexport default class ColorList extends React.Component {\n    state = { adding: false };\n\n    componentDidMount() {\n        window.addEventListener(\"click\", e => {\n            if (!e.target.closest(`[id=color-form]`) && !e.target.closest(`[id=add-color]`)) {\n                this.setState({ adding: false });\n            }\n        });\n    }\n\n    handleClose = () => {\n        this.setState({ adding: false });\n    }\n\n    render() {\n        const { colors, handleDelete, handleSubmit } = this.props;\n\n        return (\n            <div className=\"color-list\">\n                {\n                    colors.map(({ color }, i) =>\n                        <Color\n                            key={`color-${i}`}\n                            color={color}\n                            handleDelete={handleDelete}\n                        />\n                    )\n                }\n                {\n                    this.state.adding\n                        ? <ColorForm \n                            handleClose={this.handleClose}\n                            handleSubmit={handleSubmit}\n                        />\n                        : <div \n                            className=\"add-color\"\n                            onClick={() => this.setState({ adding: true })}\n                            id=\"add-color\">\n                            <i className=\"fas fa-plus\"></i>\n                        </div> \n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport './reset.css';\nimport { TopNav } from './components/header/top-nav';\nimport StyleList from './components/style-list/style-list';\nimport ColorList from './components/color-list/color-list';\nimport StyleForm from './components/form/style-form';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const styles = JSON.parse(localStorage.getItem(\"styles\")) || [];\n    let colors = JSON.parse(localStorage.getItem(\"colors\")) || null;\n\n    if (!colors) {\n      const defaultColors = \n      [{ \"id\": 1, \"value\": \"d0f4de\", \"name\": \"Granny Apple\" },\n        { \"id\": 2, \"value\": \"a9def9\", \"name\": \"Sail\" },\n        { \"id\": 3, \"value\": \"e4c1f9\", \"name\": \"Perfume\" },\n        { \"id\": 4, \"value\": \"ff99c8\", \"name\": \"Carnation Pink\" }];\n\n      colors = defaultColors;\n      localStorage.setItem(\"colors\", JSON.stringify(defaultColors));\n    }\n\n    this.state = {\n      styles,\n      colors,\n      searchText: \"\",\n      creating: false,\n    };\n  }\n\n  componentDidUpdate() {\n    const { creating } = this.state;\n    let link = document.querySelector(\".google-fonts-link\");\n\n    if (creating && link && !link.href.includes(\"Roboto\")) {\n      let href = link.href;\n      const splitIdx = href.indexOf(\"&display=swap\");\n      href = `${href.slice(0, splitIdx)}&family=Roboto:wght@400${href.slice(splitIdx)}`;\n      link.href = href;\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ searchText: e.target.value });\n  }\n\n  handleSubmit = (type, input, styleId=null, colorName=null) => {\n    const key = this.state[type];\n    let value;\n    let id = styleId !== null ? styleId : key.length;\n\n    if (styleId === null && type === \"colors\") id = key[key.length - 1].id + 1;\n\n    if (type === \"styles\") {\n      const { text, font, size, weight, style, decoration, color } = input;\n      value = { id, text, font, size, weight, style, decoration, color };\n    } else {\n      value = { id, value: input, name: colorName };\n    }\n\n    if (styleId !== null) {\n      for (let i = 0; i < key.length; i++) {\n        if (key[i].id === id) key[i] = value;\n      }\n    } else { \n      key.push(value);\n    }\n\n    localStorage.setItem(type, JSON.stringify(key));\n    this.setState({ [type]: key });\n    if (type === \"styles\" && styleId === null) this.closeCreateForm();\n  }\n\n  handleDelete = (id, type) => {\n    const key = this.state[type];\n    \n    for (let i = 0; i < key.length; i++) {\n      if (key[i] && key[i].id === id) delete key[i];\n    }\n    \n    const filtered = key.filter(key => key !== null);\n    this.setState({ [type]: filtered });\n    localStorage.setItem(`${type}`, JSON.stringify(filtered));\n  }\n\n  closeCreateForm = () => {\n    this.setState({ creating: false });\n  }\n\n  render() {\n    const filteredStyles = [];\n    const filteredColors = [];\n    const { creating, styles, colors } = this.state;\n\n    styles.forEach((style, id) => {\n      if (style \n          && (style.text.toLowerCase().includes(this.state.searchText.toLowerCase())\n          || style.font.toLowerCase().includes(this.state.searchText.toLowerCase())\n          || style.color.toLowerCase().includes(this.state.searchText.toLowerCase()))) {\n          filteredStyles.push({ id, style });\n      }\n    });\n\n    colors.forEach((color, id) => {\n      if (color \n        && (color.value.toLowerCase().includes(this.state.searchText.toLowerCase())\n        || color.name.toLowerCase().includes(this.state.searchText.toLowerCase()))) {\n        filteredColors.push({ id, color });\n      }\n    });\n\n    return (\n      <>\n        <TopNav handleChange={this.handleChange} />\n        <div className=\"main-container\">\n          <div className=\"colors\">\n            <h1>colors</h1>\n            <ColorList \n              colors={filteredColors}\n              handleSubmit={this.handleSubmit} \n              handleDelete={this.handleDelete}  \n            />\n          </div>\n          <div className=\"styles\">\n            <h1>fonts</h1>\n            {\n              creating\n                ? <StyleForm\n                    type=\"create\"\n                    closeCreateForm={this.closeCreateForm}\n                    handleSubmit={this.handleSubmit}\n                  />\n                : <>\n                    {\n                      styles.length < 1 \n                        ? <div className=\"empty-style\">No styles to show</div>\n                        : null\n                    }\n                    <div className=\"add-style-btn\">\n                      <button\n                        onClick={() => this.setState({ creating: true })}>\n                        Add\n                      </button>\n                    </div>\n                  </>\n            }\n            <StyleList\n              styles={filteredStyles.reverse()}\n              handleDelete={this.handleDelete}\n              handleSubmit={this.handleSubmit}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}