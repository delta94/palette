{"version":3,"sources":["components/header/search-bar.jsx","components/header/top-nav.jsx","components/form/code.jsx","components/form/textarea.jsx","components/form/style-form.jsx","components/style-list/style.jsx","components/style-list/style-list.jsx","components/form/color-form.jsx","components/color-list/color.jsx","components/color-list/color-list.jsx","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","className","type","onChange","handleChange","placeholder","spellCheck","TopNav","href","target","rel","Code","style","font","size","weight","decoration","color","category","Textarea","text","e","field","setState","value","handleSubmit","input","preventDefault","isValid","closeEditForm","id","state","px","slice","length","num","parseInt","toString","sizeClass","colorClass","fonts","weights","textarea","React","createRef","this","current","focus","fetch","process","REACT_APP_API_KEY","then","response","json","googleFonts","i","push","items","family","variants","filter","regularIdx","indexOf","link","document","querySelector","createElement","classList","add","getElementsByTagName","appendChild","prevProps","prevState","split","join","splitIdx","closeCreateForm","code","map","key","maxLength","onFocus","onBlur","onClick","ref","fontFamily","fontSize","fontWeight","fontStyle","textDecoration","Component","StyleForm","Style","editing","handleDelete","StyleList","styles","includes","sort","string","Object","entries","forEach","ColorForm","handleClose","backgroundColor","onKeyDown","Color","show","copy","setAttribute","body","select","result","execCommand","removeChild","stopPropagation","onMouseEnter","onMouseLeave","ColorList","adding","colors","App","searchText","creating","styleId","localStorage","setItem","JSON","stringify","filtered","parse","getItem","filteredStyles","filteredColors","toLowerCase","reverse","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.20e94f55.chunk.js","sourcesContent":["import React from 'react';\nimport './search-bar.css';\n\nexport const SearchBar = props => (\n    <div className=\"search\">\n        <input\n            type=\"search\"\n            onChange={props.handleChange}\n            placeholder=\"Search by color, font or text\"\n            spellCheck=\"false\"\n        />\n    </div>\n)","import React from 'react';\nimport './top-nav.css';\nimport { SearchBar } from './search-bar';\n\nexport const TopNav = props => (\n    <nav className=\"top-nav-container\">\n        <nav className=\"top-nav\">\n            <div className=\"logo rainbow\">\n                <i className=\"fas fa-palette\"></i>\n                Palette\n            </div>\n            <SearchBar handleChange={props.handleChange} />\n            <div className=\"icons\">\n                <a\n                    href=\"https://juneseong.com\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"far fa-folder\"></i>\n                </a>\n                <a\n                    href=\"https://github.com/juneseong/palette\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-github\"></i>\n                </a>\n                <a\n                    href=\"https://www.linkedin.com/in/juneseong\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-linkedin-in\"></i>\n                </a>\n                <a\n                    href=\"https://angel.co/u/june-seong\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-angellist\"></i>\n                </a>\n            </div>\n        </nav>\n    </nav>\n)","import React from 'react';\nimport './code.css';\n\nexport const Code = ({ ...props }) => {\n    const { font, size, weight, style, decoration, color, category } = props.style;\n\n    return (\n        <div className=\"code-container\">\n            <div className=\"code-instruction-code\">\n                <div className=\"code-instruction\">\n                    <button>Copy</button> and paste the code into the {\"<head>\"} of your html.\n                </div>\n                <div className=\"code\">\n                    {`<link href=\"https://fonts.googleapis.com/css2?family=`}\n                    <span>{font + `:wght@` + weight}</span>\n                    {`&display=swap\" rel=\"stylesheet\">`}\n                </div>\n            </div>\n            <div className=\"code-instruction-code\">\n                <div className=\"code-instruction\">\n                    <button>Copy</button> and paste the code into your CSS file.\n                </div>\n                <div className=\"code\">\n                    <p>{font ? `font-family: '${font}', ${category};` : null}</p>\n                    <p>{size ? `font-size: ${size};` : null}</p>\n                    <p>{weight ? `font-weight: ${weight};` : null}</p>\n                    <p>{style !== \"normal\" ? `font-style: ${style};` : null}</p>\n                    <p>{decoration !== \"none\" ? `text-decoration: ${decoration};` : null}</p>\n                    <p>{color ? `color: #${color};` : null}</p>\n                </div>\n            </div>\n        </div>\n    )\n};","import React from 'react';\nimport './textarea.css';\nimport { Code } from './code';\n\nexport default class Textarea extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let text, font, size, weight, style, decoration, color;\n\n        if (props.type === \"create\") {\n            text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aliquam a diam eleifend mauris porta posuere a eu lectus. Suspendisse pellentesque diam tempor enim rutrum pretium.\";\n            font = \"Roboto\";\n            size = \"15px\";\n            weight = \"400\";\n            style = \"normal\";\n            decoration = \"none\";\n            color = \"000000\";\n        } else {\n            text = props.style.text;\n            font = props.style.font;\n            size = props.style.size;\n            weight = props.style.weight;\n            style = props.style.style;\n            decoration = props.style.decoration;\n            color = props.style.color;\n        }\n\n        this.state = { text, font, size, weight, style, decoration, color, \n            fonts: null, \n            weights: null,\n            category: null,\n            sizeClass: \"\",\n            colorClass: \"\"\n        };\n\n        this.textarea = React.createRef();\n    }\n\n    componentDidMount() {\n        this.textarea.current.focus();\n\n        fetch(`https://www.googleapis.com/webfonts/v1/webfonts?sort=popularity&key=${process.env.REACT_APP_API_KEY}`)\n            .then(response => response.json())\n            .then(googleFonts => {           \n                const fonts = [];\n                for (let i = 0; i < 40; i++) fonts.push(googleFonts.items[i]);\n                this.setState({ fonts }); \n\n                for (let i = 0; i < fonts.length; i++) {\n                    const font = fonts[i];\n                    let { family, variants } = font;\n\n                    if (family === this.state.font) {\n                        const weights = variants.filter(weight => weight.length < 4 || weight === \"regular\");\n                        const regularIdx = weights.indexOf(\"regular\");\n                        if (regularIdx !== null) weights[regularIdx] = \"400\";\n\n                        const { category } = font;\n                        this.setState({ category, weights });\n\n                        break;\n                    }\n                }\n        });\n\n        let link = document.querySelector(\".google-fonts-link\");\n\n        if (!link) {\n            const href = \"https://fonts.googleapis.com/css2?family=Roboto&display=swap\";\n            link = document.createElement(\"link\");\n            link.rel = \"stylesheet\";\n            link.classList.add(\"google-fonts-link\");\n            document.getElementsByTagName(\"head\")[0].appendChild(link);\n            link.href = href;\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        let { font, weight } = this.state;\n\n        if (prevState.font !== font) {\n            const link = document.querySelector(\".google-fonts-link\");\n            let href = link.href;\n            if (font.split(\" \").length > 1) font = font.split(\" \").join(\"+\");\n            const splitIdx = href.indexOf(\"&display=swap\");\n            href = `${href.slice(0, splitIdx)}&family=${font}:wght@${weight}${href.slice(splitIdx)}`;\n            link.href = href;\n        }\n    }\n\n    handleChange = (e, field) => {\n        this.setState({ [field]: e.target.value });\n    }\n\n    handleSubmit = (e, input) => {\n        e.preventDefault();\n\n        if (this.isValid()) {\n            const { handleSubmit, style, closeEditForm } = this.props;\n            handleSubmit(\"styles\", input, style.id);\n            closeEditForm();\n        }\n    }\n\n    isValid = () => {\n        const { color, size } = this.state;\n        const px = size.slice(size.length - 2);\n        const num = size.slice(0, size.length - 2);\n\n        if (px !== \"px\" || num !== parseInt(num).toString()) {\n            this.setState({ sizeClass: \"error\" });\n            return false;\n        } else if (color === \"\") {\n            this.setState({ colorClass: \"error\" });\n            return false;\n        }\n        \n        return true;\n    }\n\n    render() {\n        const { type, handleSubmit, closeCreateForm, closeEditForm, code } = this.props;\n        const { text, font, size, weight, style, decoration, color, fonts, weights, sizeClass, colorClass } = this.state;\n\n        return (\n            <>\n                {\n                    code \n                        ? <Code style={this.state} />\n                        : <form>\n                            <div className=\"form-style\">\n                                <div>\n                                    <i className=\"fas fa-font\"></i>\n                                    <select\n                                        className=\"font-select\" value={font}\n                                        onChange={e => this.setState({ font: e.target.value })}>\n                                        {\n                                            fonts\n                                                ? fonts.map((font, i) => (\n                                                    <option key={`font-option-${i}`}>\n                                                        {font.family}\n                                                    </option>\n                                                )) : null\n                                        }\n                                    </select>\n                                </div>\n                                <div>\n                                    <span className=\"material-icons\">\n                                        format_size\n                                    </span>\n                                    <input\n                                        className={`size-input ${sizeClass}`}\n                                        value={size}\n                                        onChange={e => this.setState({ size: e.target.value })}\n                                        type=\"text\"\n                                        maxLength=\"4\"\n                                        spellCheck=\"false\"\n                                        onFocus={() => this.setState({ sizeClass: \"focused\" })}\n                                        onBlur={() => this.setState({ sizeClass: \"\" })}\n                                    />\n                                </div>\n                                <div>\n                                    <i className=\"fas fa-bold\"></i>\n                                    <select\n                                        value={weight}\n                                        onChange={e => this.setState({ weight: e.target.value })}>\n                                        {\n                                            weights\n                                                ? this.state.weights.map((weight, i) => (\n                                                    <option key={`weight-option-${i}`}>\n                                                        {weight}\n                                                    </option>\n                                                )) : null\n                                        }\n                                    </select>\n                                </div>\n                                <div className=\"font-style-icon\">\n                                    <i\n                                        className=\"fas fa-italic\"\n                                        style={{ color: style === \"italic\" ? \"#0081ff\" : \"\" }}\n                                        onClick={() => this.setState({ style: style === \"normal\" ? \"italic\" : \"normal\" })}>\n                                    </i>\n                                    <i\n                                        className=\"fas fa-underline\"\n                                        style={{ color: decoration === \"underline\" ? \"#0081ff\" : \"\" }}\n                                        onClick={() => this.setState({ decoration: decoration === \"underline\" ? \"none\" : \"underline\" })}>\n                                    </i>\n                                </div>\n                                <div className={`color-input-form ${colorClass}`}>\n                                    <i className=\"fas fa-palette\"></i>\n                                    #\n                                    <input\n                                        className=\"color-input\"\n                                        type=\"text\"\n                                        maxLength=\"6\"\n                                        spellCheck=\"false\"\n                                        value={color}\n                                        onChange={e => this.setState({ color: e.target.value })}\n                                        onFocus={() => this.setState({ colorClass: \"focused\" })}\n                                        onBlur={() => this.setState({ colorClass: \"\" })}\n                                    />\n                                </div>\n                            </div>\n                            <textarea\n                                ref={this.textarea}\n                                placeholder=\"Add text\"\n                                value={text}\n                                onChange={e => this.handleChange(e, \"text\")}\n                                spellCheck=\"false\"\n                                style={{\n                                    fontFamily: font,\n                                    fontSize: size,\n                                    fontWeight: weight,\n                                    fontStyle: style,\n                                    textDecoration: decoration,\n                                    color: \"#\" + color\n                                }}\n                            />\n                        </form>\n                }\n                {\n                    type === \"create\"\n                        ? <div className=\"cancel-save-btn\">\n                            <button onClick={closeCreateForm}>\n                                Cancel\n                            </button>\n                            <button onClick={() => this.isValid() ? handleSubmit(\"styles\", this.state) : null}>\n                                Save\n                            </button>\n                        </div>\n                        : <div className=\"cancel-save-btn\">\n                            <button onClick={closeEditForm}>\n                                Cancel\n                            </button>\n                            <button onClick={e => this.handleSubmit(e, this.state)}>\n                                Save\n                            </button>\n                        </div>\n                }\n            </>\n        )\n    }\n}","import React from 'react';\nimport './style-form.css';\nimport Textarea from './textarea';\n\nexport default class StyleForm extends React.Component {\n    state = { code: false };\n    \n    render() {\n        const { type, handleSubmit, closeCreateForm, closeEditForm, style } = this.props;\n        const { code } = this.state;\n\n        return (\n            <div className=\"form-container\">\n                <div className=\"form-header\">\n                    <ul>\n                        <li \n                            className={!code ? \"active\" : \"\"}\n                            onClick={() => this.setState({ code: false })}>\n                            {type === \"create\" ? \"Add Style\" : \"Edit Style\"}\n                        </li>\n                        <li className={code ? \"active\" : \"\"}\n                            onClick={() => this.setState({ code: true })}>\n                            Code\n                        </li>\n                        <li></li>\n                    </ul>\n                </div>\n                <Textarea \n                    handleSubmit={handleSubmit}\n                    closeCreateForm={closeCreateForm}\n                    closeEditForm={closeEditForm}\n                    type={type}\n                    style={style}\n                    code={code}\n                />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './style.css';\nimport StyleForm from '../form/style-form';\n\nexport default class Style extends React.Component {\n    state = { editing: false };\n\n    closeEditForm = () => {\n        this.setState({ editing: false });\n    }\n\n    render() {\n        const { style, handleDelete, handleSubmit } = this.props;\n        const { editing } = this.state;\n\n        return (\n            <>\n                {\n                    editing\n                        ? <StyleForm \n                            type=\"edit\" \n                            style={style} \n                            closeEditForm={this.closeEditForm} \n                            handleSubmit={handleSubmit}\n                        />\n                        : <div className=\"style\">\n                            <div className=\"edit-delete-style\">\n                                <button onClick={() => this.setState({ editing: true })}>\n                                    Edit\n                                </button>\n                                <button onClick={() => handleDelete(style.id, \"styles\")}>\n                                    Delete\n                                </button>\n                            </div>\n                            <span\n                                style={{\n                                    fontFamily: style.font,\n                                    fontSize: style.size,\n                                    fontWeight: style.weight,\n                                    fontStyle: style.style,\n                                    textDecoration: style.decoration,\n                                    color: \"#\" + style.color\n                                }}>\n                                {style.text}\n                            </span>\n                            <div className=\"style-label\">\n                                {`${style.font} — ${style.size}, #${style.color}`}\n                            </div>\n                        </div>\n                }\n            </>\n        )\n    }\n}","import React from 'react';\nimport Style from './style';\nimport './style-list.css';\n\nexport default class StyleList extends React.Component {\n    componentDidUpdate(prevProps) {\n        const { styles }  = this.props;\n       \n        if (styles.length > 0) {\n            if (styles !== prevProps.styles) {\n                const fonts = {};\n                \n                for (let i = 0; i < styles.length; i++) {\n                    const { style } = styles[i];\n                    const font = style.font;\n                    const weight = style.weight;\n\n                    if (!fonts[font]) fonts[font] = [];\n                    if (!fonts[font].includes(weight)) fonts[font].push(weight);\n                    if (fonts[font].length > 1) fonts[font].sort();\n                }\n\n                let href = [`https://fonts.googleapis.com/css2?`, `&display=swap`];\n                const string = [];\n\n                Object.entries(fonts).forEach(([font, weights], i) => {\n                    if (font.split(\" \").length > 1) font = font.split(\" \").join(\"+\");\n                    weights = weights.join(\";\");\n                    i === 0 ? string.push(`family=${font}`) : string.push(`&family=${font}`);\n                    string.push(`:wght@${weights}`);\n                });\n\n                let link = document.querySelector(\".google-fonts-link\");\n\n                if (!link) {\n                    link = document.createElement(\"link\");\n                    link.rel = \"stylesheet\";\n                    link.classList.add(\"google-fonts-link\");\n                    document.getElementsByTagName(\"head\")[0].appendChild(link);\n                }\n\n                href = href.join(string.join(\"\"));\n                link.href = href;\n            }\n        }\n    }\n\n    render() {\n        const { handleDelete, handleSubmit, styles } = this.props;\n\n        return (\n            <div className=\"style-list\">\n                {\n                    styles.map(({ style }, i) =>\n                        <Style\n                            key={`style-${i}`}\n                            style={style}\n                            handleDelete={handleDelete}\n                            handleSubmit={handleSubmit}\n                        />\n                    )\n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './color-form.css';\n\nexport default class ColorForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { color: \"\" };\n        this.textarea = React.createRef();\n    }\n\n    componentDidMount() {\n        this.textarea.current.focus();\n    }\n\n    render() {\n        const { handleSubmit, handleClose } = this.props;\n        const { color } = this.state;\n\n        return (\n            <div className=\"add-color\">\n                <div\n                    className=\"colored\"\n                    style={{ backgroundColor: `#${color}` }}>\n                </div>\n                <div className=\"add-color-form\">\n                    <div className=\"color-code\">\n                        #\n                        <input\n                            ref={this.textarea}\n                            type=\"text\"\n                            spellCheck=\"false\"\n                            placeholder=\"000000\"\n                            maxLength=\"6\"\n                            onChange={e => this.setState({ color: e.target.value })}\n                            value={color}\n                            onKeyDown={e => e.key === \"Enter\" \n                                ? (handleSubmit(\"colors\", color), handleClose()) \n                                : null}\n                        />\n                        <i\n                            className=\"fas fa-times\"\n                            onClick={handleClose}>\n                        </i>\n                    </div>\n                    <span className=\"color-code-instruction\">Press enter to save.</span>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './color.css';\n\nexport default class Color extends React.Component {\n    state = { show: false, copy: \"Copy\" };\n\n    copy = () => {\n        this.setState({ copy: \"Copied!\" });\n\n        const input = document.createElement(\"input\");\n        input.setAttribute(\"value\", this.props.color.value);\n        document.body.appendChild(input);\n        input.select();\n        const result = document.execCommand(\"copy\");\n        document.body.removeChild(input);\n        return result;\n    };\n\n    handleDelete = e => {\n        const { color, handleDelete } = this.props;\n        e.stopPropagation();\n        handleDelete(color.id, \"colors\");\n    }\n\n    render() {\n        const { show, copy } = this.state;\n        const { color } = this.props;\n\n        return (\n            <div \n                className=\"colored\"\n                style={{ backgroundColor: `#${color.value}` }}\n                onMouseEnter={() => this.setState({ show: true })}\n                onMouseLeave={() => this.setState({ show: false, copy: \"Copy\" })}>\n                {\n                    show \n                    ? <div \n                        className=\"colored-dark\"\n                        onClick={this.copy}>\n                        <i \n                            className=\"fas fa-times\"\n                            onClick={e => this.handleDelete(e)}>\n                        </i>\n                        <div className=\"color-copy\">\n                            <p>{copy}</p>\n                        </div>\n                    </div> : null\n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './color-list.css';\nimport ColorForm from '../form/color-form';\nimport Color from './color';\n\nexport default class ColorList extends React.Component {\n    state = { adding: false };\n\n    handleClose = () => {\n        this.setState({ adding: false });\n    }\n\n    render() {\n        const { colors, handleDelete, handleSubmit } = this.props;\n\n        return (\n            <div className=\"color-list\">\n                {\n                    colors.map(({ color }, i) =>\n                        <Color\n                            key={`color-${i}`}\n                            color={color}\n                            handleDelete={handleDelete}\n                        />\n                    )\n                }\n                {\n                    this.state.adding\n                        ? <ColorForm \n                            handleClose={this.handleClose}\n                            handleSubmit={handleSubmit}\n                        />\n                        : <div className=\"add-color\"\n                            onClick={() => this.setState({ adding: true })}>\n                            <i className=\"fas fa-plus\"></i>\n                        </div> \n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport './reset.css';\nimport { TopNav } from './components/header/top-nav';\nimport StyleList from './components/style-list/style-list';\nimport ColorList from './components/color-list/color-list';\nimport StyleForm from './components/form/style-form';\n\nclass App extends React.Component {\n  state = {\n    styles: [],\n    colors: [],\n    searchText: \"\",\n    creating: false,\n  };\n\n  componentDidMount() {\n    this.setState({ \n      styles: JSON.parse(localStorage.getItem(\"styles\")) || [],\n      colors: JSON.parse(localStorage.getItem(\"colors\")) || []\n    });\n  }\n\n  componentDidUpdate() {\n    const { creating } = this.state;\n    let link = document.querySelector(\".google-fonts-link\");\n\n    if (creating && link && !link.href.includes(\"Roboto\")) {\n      let href = link.href;\n      const splitIdx = href.indexOf(\"&display=swap\");\n      href = `${href.slice(0, splitIdx)}&family=Roboto:wght@400${href.slice(splitIdx)}`;\n      link.href = href;\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ searchText: e.target.value });\n  }\n\n  handleSubmit = (type, input, styleId=null) => {\n    const key = this.state[type];\n    let value;\n    let id = styleId !== null ? styleId : key.length;\n\n    if (styleId === null) {\n      for (let i = 0; i < key.length; i++) {\n        if (key[i].id !== i) id = i;\n      }\n    }\n\n    if (type === \"styles\") {\n      const { text, font, size, weight, style, decoration, color } = input;\n      value = { id, text, font, size, weight, style, decoration, color };\n    } else {\n      value = { id, value: input };\n    }\n\n    if (styleId !== null) {\n      for (let i = 0; i < key.length; i++) {\n        if (key[i].id === id) key[i] = value;\n      }\n    } else { \n      key.push(value);\n    }\n\n    localStorage.setItem(type, JSON.stringify(key));\n    this.setState({ [type]: key });\n    if (type === \"styles\" && styleId === null) this.closeCreateForm();\n  }\n\n  handleDelete = (id, type) => {\n    const key = this.state[type];\n    \n    for (let i = 0; i < key.length; i++) {\n      if (key[i] && key[i].id === id) delete key[i];\n    }\n    \n    const filtered = key.filter(key => key !== null);\n    this.setState({ [type]: filtered });\n    localStorage.setItem(`${type}`, JSON.stringify(filtered));\n  }\n\n  closeCreateForm = () => {\n    this.setState({ creating: false });\n  }\n\n  render() {\n    const filteredStyles = [];\n    const filteredColors = [];\n    const { creating, styles, colors } = this.state;\n\n    styles.forEach((style, id) => {\n      if (style && style.text.toLowerCase().includes(this.state.searchText.toLowerCase())) {\n          filteredStyles.push({ id, style });\n      }\n    });\n\n    colors.forEach((color, id) => {\n      if (color && color.value.toLowerCase().includes(this.state.searchText.toLowerCase())) {\n        filteredColors.push({ id, color });\n      }\n    });\n\n    return (\n      <>\n        <TopNav handleChange={this.handleChange} />\n        <div className=\"main-container\">\n          <div className=\"colors\">\n            <h1>Colors</h1>\n            <ColorList \n              colors={filteredColors}\n              handleSubmit={this.handleSubmit} \n              handleDelete={this.handleDelete}  \n            />\n          </div>\n          <div className=\"styles\">\n            <h1>Fonts</h1>\n            {\n              creating\n                ? <StyleForm\n                    type=\"create\"\n                    closeCreateForm={this.closeCreateForm}\n                    handleSubmit={this.handleSubmit}\n                  />\n                : <>\n                    {\n                      styles.length < 1 \n                        ? <div className=\"empty-style\">No styles to show</div>\n                        : null\n                    }\n                    <div className=\"add-style-btn\">\n                      <button\n                        onClick={() => this.setState({ creating: true })}>\n                        Add\n                      </button>\n                    </div>\n                  </>\n            }\n            <StyleList\n              styles={filteredStyles.reverse()}\n              handleDelete={this.handleDelete}\n              handleSubmit={this.handleSubmit}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}