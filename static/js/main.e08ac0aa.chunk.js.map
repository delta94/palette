{"version":3,"sources":["components/header/top-nav.jsx","components/header/search-bar.jsx","components/form/style-form.jsx","components/style-list/style.jsx","components/style-list/style-list.jsx","components/form/color-form.jsx","components/color-list/color-list.jsx","App.js","serviceWorker.js","index.js"],"names":["TopNav","className","href","target","rel","SearchBar","props","type","onChange","handleChange","placeholder","StyleForm","e","field","setState","value","state","text","style","css","textarea","React","createRef","this","current","focus","handleClose","handleSubmit","closeForm","onClick","ref","Component","Style","editing","remove","id","StyleList","styles","map","i","key","ColorForm","color","backgroundColor","maxLength","onKeyDown","ColorList","adding","App","searchText","input","length","push","localStorage","setItem","JSON","stringify","creating","delete","filteredStyles","filter","colors","parse","getItem","filteredColors","forEach","toLowerCase","includes","reverse","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e08ac0aa.chunk.js","sourcesContent":["import React from 'react';\nimport \"./top-nav.css\"\n\nexport const TopNav = () => (\n    <nav className=\"top-nav-container\">\n        <nav className=\"top-nav\">\n            <div className=\"logo rainbow\">\n                <i className=\"fas fa-palette\"></i>\n                Palette\n            </div>\n            <div className=\"icons\">\n                <a\n                    href=\"https://juneseong.com\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"far fa-folder\"></i>\n                </a>\n                <a\n                    href=\"https://github.com/juneseong/palette\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-github\"></i>\n                </a>\n                <a\n                    href=\"https://www.linkedin.com/in/juneseong\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-linkedin-in\"></i>\n                </a>\n                <a\n                    href=\"https://angel.co/u/june-seong\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-angellist\"></i>\n                </a>\n            </div>\n        </nav>\n    </nav>\n)","import React from 'react';\nimport './search-bar.css';\n\nexport const SearchBar = props => (\n    <div className=\"search\">\n        <input\n            type=\"search\"\n            onChange={props.handleChange}\n            placeholder=\"Search by font, color or text\"\n        />\n    </div>\n)","import React from 'react';\nimport \"./style-form.css\";\n\nexport default class StyleForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const defaultText = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. In tortor arcu, luctus ut consequat in, maximus vitae orci.\";\n\n        this.state = {\n            text: props.type === \"create\" ? defaultText : props.style.text,\n            css: false\n        };\n\n        this.textarea = React.createRef();\n    }\n\n    componentDidMount() {\n        this.textarea.current.focus();\n    }\n\n    handleChange = (e, field) => {\n        this.setState({ [field]: e.target.value });\n    }\n\n    render() {\n        const { type, handleClose, handleSubmit, closeForm } = this.props;\n        const { text, css } = this.state;\n\n        return (\n            <div className=\"form-container\">\n                <div className=\"form-header\">\n                    <ul>\n                        <li \n                            className={!css ? \"active\" : \"\"}\n                            onClick={() => this.setState({ css: false })}>\n                            {type === \"create\" ? \"Add Style\" : \"Edit Style\"}\n                        </li>\n                        <li className={css ? \"active\" : \"\"}\n                            onClick={() => this.setState({ css: true })}>\n                            CSS\n                        </li>\n                        <li></li>\n                    </ul>\n                </div>\n                <form>\n                    <div className=\"form-style\">\n                        <select>\n                            <option>Calibri</option>\n                            <option>Lato</option>\n                            <option>Open Sans</option>\n                            <option>Sans Serif</option>\n                            <option>Serif</option>\n                            <option>Times New Roman</option>\n                            <option>Verdana</option>\n                        </select>\n                        <input type=\"number\" />\n                        <i className=\"fas fa-bold\"></i>\n                        <i className=\"fas fa-italic\"></i>\n                        <i className=\"fas fa-underline\"></i>\n                        <i className=\"fas fa-palette\"></i>\n                        <input type=\"text\" placeholder=\"#000000\" />\n                    </div>\n                    <textarea\n                        ref={this.textarea}\n                        placeholder=\"Add text\"\n                        value={text}\n                        onChange={e => this.handleChange(e, \"text\")}\n                    />\n                    <div className=\"cancel-save-btn\">\n                        {\n                            type === \"create\"\n                                ? \n                                    <button onClick={handleClose}>\n                                        Cancel\n                                    </button>\n                                : \n                                    <button onClick={closeForm}>\n                                        Cancel\n                                    </button>\n                        }\n                        <button onClick={() => handleSubmit(\"styles\", text)}>\n                            Save\n                        </button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './style.css';\nimport StyleForm from '../form/style-form';\n\nexport default class Style extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editing: false\n        };\n    }\n\n    closeForm = () => {\n        this.setState({ editing: false });\n    }\n\n    render() {\n\n        const { style, remove } = this.props;\n\n        if (this.state.editing) {\n            return <StyleForm type=\"edit\" style={style} closeForm={this.closeForm} />;\n        } else {\n            return (\n                <div className=\"style\">\n                    <div className=\"edit-delete-style\">\n                        <button onClick={() => this.setState({ editing: true })}>\n                            edit\n                        </button>\n                        <button onClick={() => remove(style.id)}>\n                            delete\n                        </button>\n                    </div>\n                    {style.text}\n                </div>\n            )\n        }\n    }\n}","import React from 'react';\nimport Style from './style';\nimport './style-list.css';\n\nexport const StyleList = props => (\n    <div className=\"style-list\">\n        {\n            props.styles.map(({ style }, i) =>\n                <Style\n                    key={`sfdsfsd-${i}`}\n                    style={style}\n                    remove={props.remove}\n                />\n            )\n        }\n    </div>\n)","import React from 'react';\nimport './color-form.css';\n\nexport default class ColorForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            color: \"\"\n        };\n\n        this.textarea = React.createRef();\n    }\n\n    componentDidMount() {\n        this.textarea.current.focus();\n    }\n\n    render() {\n        const { handleSubmit, handleClose } = this.props;\n        const { color } = this.state;\n\n        return (\n            <div className=\"add-color\">\n                <div\n                    className=\"colored\"\n                    style={{ backgroundColor: `#${color}` }}>\n                </div>\n                <div className=\"add-color-form\">\n                    <div className=\"color-code\">\n                        #\n                        <input\n                            ref={this.textarea}\n                            type=\"text\"\n                            placeholder=\"000000\"\n                            maxLength=\"6\"\n                            onChange={e => this.setState({ color: e.target.value })}\n                            value={color}\n                            onKeyDown={e => e.key === \"Enter\" \n                                ? (handleSubmit(\"colors\", color), handleClose()) \n                                : null}\n                        />\n                        <i\n                            className=\"fas fa-times\"\n                            onClick={handleClose}>\n                        </i>\n                    </div>\n                    <span className=\"color-code-instruction\">Press enter to save.</span>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './color-list.css';\nimport ColorForm from '../form/color-form';\n\nexport default class ColorList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            adding: false\n        };\n    }\n\n    handleClose = () => {\n        this.setState({ adding: false });\n    }\n\n    render() {\n\n        return (\n            <div className=\"color-list\">\n                {\n                    this.state.adding\n                        ? \n                            <ColorForm \n                                handleClose={this.handleClose}\n                                handleSubmit={this.props.handleSubmit}\n                            />\n                        :\n                            <div className=\"add-color\"\n                                onClick={() => this.setState({ adding: true })}>\n                                <i className=\"fas fa-plus\"></i>\n                            </div> \n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport './reset.css';\nimport { TopNav } from './components/header/top-nav';\nimport { SearchBar } from './components/header/search-bar';\nimport StyleForm from './components/form/style-form';\nimport { StyleList } from './components/style-list/style-list';\nimport ColorList from './components/color-list/color-list';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      styles: [],\n      colors: [],\n      searchText: \"\",\n      creating: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ \n      styles: JSON.parse(localStorage.getItem(\"styles\")) || [],\n      colors: JSON.parse(localStorage.getItem(\"colors\")) || []\n    });\n  }\n\n  handleChange = e => {\n    this.setState({ searchText: e.target.value });\n  }\n\n  handleSubmit = (type, input) => {\n    const key = this.state[type];\n    let id = key.length;\n    let value;\n\n    for (let i = 0; i < key.length; i++) {\n      if (key[i].id !== i) id = i;\n    }\n\n    value = type === \"styles\" \n      ? { id, text: input } \n      : { id, value: input };\n\n    key.push(value);\n    localStorage.setItem(type, JSON.stringify(key));\n    this.setState({ [type]: key });\n    if (type === \"styles\") this.handleClose();\n  }\n\n  handleClose = () => {\n    this.setState({ creating: false });\n  }\n\n  delete = id => {\n    const styles = this.state.styles;\n\n    for (let i = 0; i < styles.length; i++) {\n      if (styles[i] && styles[i].id === id) delete styles[i];\n    }\n    \n    const filteredStyles = styles.filter(style => {\n      return style !== null;\n    });\n\n    this.setState({ styles: filteredStyles });\n    localStorage.setItem(\"styles\", JSON.stringify(filteredStyles));\n  }\n\n  render() {\n    const filteredStyles = [];\n    const filteredColors = [];\n    const { creating, styles, colors } = this.state;\n\n    styles.forEach((style, id) => {\n      if (style) {\n        if (style.text.toLowerCase().includes(this.state.searchText.toLowerCase())) {\n          filteredStyles.push({ id, style });\n        }\n      }\n    });\n\n    colors.forEach((color, id) => {\n      if (color) {\n        if (color.value.toLowerCase().includes(this.state.searchText.toLowerCase())) {\n          filteredColors.push({ id, color });\n        }\n      }\n    });\n\n    return (\n      <div className=\"main-container\">\n        <TopNav />\n        <SearchBar handleChange={this.handleChange} />\n        <div className=\"colors\">\n          <h1>Colors</h1>\n          <ColorList \n            colors={filteredColors}\n            handleSubmit={this.handleSubmit} />\n        </div>\n        <div className=\"styles\">\n          <h1>Styles</h1>\n          {\n            !creating && styles.length < 1\n              ? <div className=\"empty-style\">No styles to show</div>\n              : null\n          }\n          {\n            creating\n              ? \n                <StyleForm\n                  type=\"create\"\n                  handleClose={this.handleClose}\n                  handleSubmit={this.handleSubmit}\n                />\n              :\n                <div className=\"add-style-btn\">\n                  <button\n                    onClick={() => this.setState({ creating: true })}>\n                    Add\n                  </button>\n                </div>\n          }\n          <StyleList\n            styles={filteredStyles.reverse()}\n            remove={this.delete}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}