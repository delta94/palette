{"version":3,"sources":["components/header/top-nav.jsx","components/header/search-bar.jsx","components/form/textarea.jsx","components/form/code.jsx","components/form/style-form.jsx","components/style-list/style.jsx","components/style-list/style-list.jsx","components/form/color-form.jsx","components/color-list/color.jsx","components/color-list/color-list.jsx","App.js","serviceWorker.js","index.js"],"names":["TopNav","className","href","target","rel","SearchBar","props","type","onChange","handleChange","placeholder","spellCheck","Textarea","e","field","setState","value","handleSubmit","input","preventDefault","style","closeEditForm","id","state","text","font","size","weight","decoration","color","textarea","React","createRef","this","current","focus","closeCreateForm","maxLength","onClick","ref","fontFamily","fontSize","fontWeight","fontStyle","textDecoration","Component","Code","StyleForm","code","Style","editing","remove","StyleList","styles","map","i","key","ColorForm","handleClose","backgroundColor","onKeyDown","Color","ColorList","adding","colors","App","searchText","styleId","length","push","localStorage","setItem","JSON","stringify","creating","delete","filteredStyles","filter","parse","getItem","filteredColors","forEach","toLowerCase","includes","reverse","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b2e7390b.chunk.js","sourcesContent":["import React from 'react';\nimport \"./top-nav.css\"\n\nexport const TopNav = () => (\n    <nav className=\"top-nav-container\">\n        <nav className=\"top-nav\">\n            <div className=\"logo rainbow\">\n                <i className=\"fas fa-palette\"></i>\n                Palette\n            </div>\n            <div className=\"icons\">\n                <a\n                    href=\"https://juneseong.com\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"far fa-folder\"></i>\n                </a>\n                <a\n                    href=\"https://github.com/juneseong/palette\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-github\"></i>\n                </a>\n                <a\n                    href=\"https://www.linkedin.com/in/juneseong\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-linkedin-in\"></i>\n                </a>\n                <a\n                    href=\"https://angel.co/u/june-seong\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-angellist\"></i>\n                </a>\n            </div>\n        </nav>\n    </nav>\n)","import React from 'react';\nimport './search-bar.css';\n\nexport const SearchBar = props => (\n    <div className=\"search\">\n        <input\n            type=\"search\"\n            onChange={props.handleChange}\n            placeholder=\"Search by font, color or text\"\n            spellCheck=\"false\"\n        />\n    </div>\n)","import React from 'react';\nimport './textarea.css';\n\nexport default class Textarea extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const defaultText = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\";\n\n        this.state = {\n            text: props.type === \"create\" ? defaultText : props.style.text,\n            font: \"Open Sans\",\n            size: \"14px\",\n            weight: \"400\",\n            style: \"normal\",\n            decoration: \"none\",\n            color: \"\"\n        };\n        \n        this.textarea = React.createRef();\n    }\n\n    componentDidMount() {\n        this.textarea.current.focus();\n    }\n\n    handleChange = (e, field) => {\n        this.setState({ [field]: e.target.value });\n    }\n\n    handleSubmit = (e, input) => {\n        e.preventDefault();\n        const { handleSubmit, style, closeEditForm } = this.props;\n        handleSubmit(\"styles\", input, style.id);\n        closeEditForm();\n    }\n\n    render() {\n        const { type, handleSubmit, closeCreateForm, closeEditForm } = this.props;\n        const { text, font, size, weight, style, decoration, color } = this.state;\n\n        return (\n            <form>\n                <div className=\"form-style\">\n                    <div>\n                        <i className=\"fas fa-font\"></i>\n                        <select\n                            className=\"font-select\" value={font}\n                            onChange={e => this.setState({ font: e.target.value })}>\n                            <option>Arial</option>\n                            <option>Arial Black</option>\n                            <option>Open Sans</option>\n                            <option>Palatino</option>\n                            <option>Verdana</option>\n                        </select>\n                    </div>\n                    <div>\n                        <span className=\"material-icons\">\n                            format_size\n                        </span>\n                        <input\n                            className=\"size-input\"\n                            value={size}\n                            onChange={e => this.setState({ size: e.target.value })}\n                            type=\"text\"\n                            maxLength=\"4\"\n                            spellCheck=\"false\"\n                        />\n                    </div>\n                    <div>\n                        <i className=\"fas fa-bold\"></i>\n                        <select\n                            value={weight}\n                            onChange={e => this.setState({ weight: e.target.value })}>\n                            <option>100</option>\n                            <option>200</option>\n                            <option>300</option>\n                            <option>400</option>\n                            <option>500</option>\n                            <option>600</option>\n                            <option>700</option>\n                            <option>800</option>\n                            <option>900</option>\n                        </select>\n                    </div>\n                    <div className=\"font-style-icon\">\n                        <i\n                            className=\"fas fa-italic\"\n                            style={{ color: style === \"italic\" ? \"#0081ff\" : \"\" }}\n                            onClick={() => this.setState({ style: style === \"normal\" ? \"italic\" : \"normal\" })}>\n                        </i>\n                        <i\n                            className=\"fas fa-underline\"\n                            style={{ color: decoration === \"underline\" ? \"#0081ff\" : \"\" }}\n                            onClick={() => this.setState({ decoration: decoration === \"underline\" ? \"none\" : \"underline\" })}>\n                        </i>\n                    </div>\n                    <div className=\"color-input-form\">\n                        <i className=\"fas fa-palette\"></i>\n                        #\n                        <input\n                            className=\"color-input\"\n                            type=\"text\"\n                            placeholder=\"000000\"\n                            maxLength=\"6\"\n                            spellCheck=\"false\"\n                            value={color}\n                            onChange={e => this.setState({ color: e.target.value })}\n                        />\n                    </div>\n                </div>\n                <textarea\n                    ref={this.textarea}\n                    placeholder=\"Add text\"\n                    value={text}\n                    onChange={e => this.handleChange(e, \"text\")}\n                    spellCheck=\"false\"\n                    style={{\n                        fontFamily: font,\n                        fontSize: size,\n                        fontWeight: weight,\n                        fontStyle: style,\n                        textDecoration: decoration,\n                        color: \"#\" + color\n                    }}\n                />\n                {\n                    type === \"create\"\n                        ?\n                            <div className=\"cancel-save-btn\">\n                                <button onClick={closeCreateForm}>\n                                    Cancel\n                                </button>\n                                <button onClick={() => handleSubmit(\"styles\", text)}>\n                                    Save\n                                </button>\n                            </div>\n                        :\n                            <div className=\"cancel-save-btn\">\n                                <button onClick={closeEditForm}>\n                                    Cancel\n                                </button>\n                                <button onClick={e => this.handleSubmit(e, text)}>\n                                    Save\n                                </button>\n                            </div>\n                }\n            </form>\n        )\n    }\n}","import React from 'react';\nimport './code.css';\n\nexport const Code = props => {\n    return (\n        <h1>test</h1>\n    )\n};","import React from 'react';\nimport './style-form.css';\nimport Textarea from './textarea';\nimport { Code } from './code';\n\nexport default class StyleForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            code: false\n        };\n    }\n    \n    render() {\n        const { type, handleSubmit, closeCreateForm, closeEditForm, style } = this.props;\n        const { code } = this.state;\n\n        return (\n            <div className=\"form-container\">\n                <div className=\"form-header\">\n                    <ul>\n                        <li \n                            className={!code ? \"active\" : \"\"}\n                            onClick={() => this.setState({ code: false })}>\n                            {type === \"create\" ? \"Add Style\" : \"Edit Style\"}\n                        </li>\n                        <li className={code ? \"active\" : \"\"}\n                            onClick={() => this.setState({ code: true })}>\n                            Code\n                        </li>\n                        <li></li>\n                    </ul>\n                </div>\n                {\n                    code \n                        ? \n                            <Code /> \n                        : \n                            <Textarea \n                                handleSubmit={handleSubmit}\n                                closeCreateForm={closeCreateForm}\n                                closeEditForm={closeEditForm}\n                                type={type}\n                                style={style}\n                            />\n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './style.css';\nimport StyleForm from '../form/style-form';\n\nexport default class Style extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editing: false\n        };\n    }\n\n    closeEditForm = () => {\n        this.setState({ editing: false });\n    }\n\n    render() {\n\n        const { style, remove, handleSubmit } = this.props;\n\n        return (\n            <>\n                {\n                    this.state.editing\n                        ?\n                            <StyleForm \n                                type=\"edit\" \n                                style={style} \n                                closeEditForm={this.closeEditForm} \n                                handleSubmit={handleSubmit}\n                            />\n                        :\n                            <div className=\"style\">\n                                <div className=\"edit-delete-style\">\n                                    <button onClick={() => this.setState({ editing: true })}>\n                                        Edit\n                                    </button>\n                                    <button onClick={() => remove(style.id)}>\n                                        Delete\n                                    </button>\n                                </div>\n                                {style.text}\n                            </div>\n                }\n            </>\n        )\n    }\n}","import React from 'react';\nimport Style from './style';\nimport './style-list.css';\n\nexport const StyleList = props => (\n    <div className=\"style-list\">\n        {\n            props.styles.map(({ style }, i) =>\n                <Style\n                    key={`style-${i}`}\n                    style={style}\n                    remove={props.remove}\n                    handleSubmit={props.handleSubmit}\n                />\n            )\n        }\n    </div>\n)","import React from 'react';\nimport './color-form.css';\n\nexport default class ColorForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            color: \"\"\n        };\n\n        this.textarea = React.createRef();\n    }\n\n    componentDidMount() {\n        this.textarea.current.focus();\n    }\n\n    render() {\n        const { handleSubmit, handleClose } = this.props;\n        const { color } = this.state;\n\n        return (\n            <div className=\"add-color\">\n                <div\n                    className=\"colored\"\n                    style={{ backgroundColor: `#${color}` }}>\n                </div>\n                <div className=\"add-color-form\">\n                    <div className=\"color-code\">\n                        #\n                        <input\n                            ref={this.textarea}\n                            type=\"text\"\n                            spellCheck=\"false\"\n                            placeholder=\"000000\"\n                            maxLength=\"6\"\n                            onChange={e => this.setState({ color: e.target.value })}\n                            value={color}\n                            onKeyDown={e => e.key === \"Enter\" \n                                ? (handleSubmit(\"colors\", color), handleClose()) \n                                : null}\n                        />\n                        <i\n                            className=\"fas fa-times\"\n                            onClick={handleClose}>\n                        </i>\n                    </div>\n                    <span className=\"color-code-instruction\">Press enter to save.</span>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './color.css';\n\nexport default class Color extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    render() {\n        const { color } = this.props;\n        return (\n            <div \n                className=\"colored\"\n                style={{ backgroundColor: `#${color.value}` }}>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './color-list.css';\nimport ColorForm from '../form/color-form';\nimport Color from './color';\n\nexport default class ColorList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            adding: false\n        };\n    }\n\n    handleClose = () => {\n        this.setState({ adding: false });\n    }\n\n    render() {\n        const { colors } = this.props;\n\n        return (\n            <div className=\"color-list\">\n                {\n                    colors.map(({ color }, i) =>\n                        <Color\n                            key={`color-${i}`}\n                            color={color}\n                        />\n                    )\n                }\n                {\n                    this.state.adding\n                        ? \n                            <ColorForm \n                                handleClose={this.handleClose}\n                                handleSubmit={this.props.handleSubmit}\n                            />\n                        :\n                            <div className=\"add-color\"\n                                onClick={() => this.setState({ adding: true })}>\n                                <i className=\"fas fa-plus\"></i>\n                            </div> \n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport './reset.css';\nimport { TopNav } from './components/header/top-nav';\nimport { SearchBar } from './components/header/search-bar';\nimport StyleForm from './components/form/style-form';\nimport { StyleList } from './components/style-list/style-list';\nimport ColorList from './components/color-list/color-list';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      styles: [],\n      colors: [],\n      searchText: \"\",\n      creating: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ \n      styles: JSON.parse(localStorage.getItem(\"styles\")) || [],\n      colors: JSON.parse(localStorage.getItem(\"colors\")) || []\n    });\n  }\n\n  handleChange = e => {\n    this.setState({ searchText: e.target.value });\n  }\n\n  handleSubmit = (type, input, styleId=null) => {\n      const key = this.state[type];\n      let id = styleId !== null ? styleId : key.length;\n      let value;\n\n      if (styleId === null) {\n        for (let i = 0; i < key.length; i++) {\n          if (key[i].id !== i) id = i;\n        }\n      }\n\n      value = type === \"styles\" \n        ? { id, text: input } \n        : { id, value: input };\n\n      if (styleId !== null) {\n        for (let i = 0; i < key.length; i++) {\n          if (key[i].id === id) key[i] = value;\n        }\n      } else { \n        key.push(value);\n      }\n\n      localStorage.setItem(type, JSON.stringify(key));\n      this.setState({ [type]: key });\n      if (type === \"styles\" && styleId === null) this.closeCreateForm();\n  }\n\n  closeCreateForm = () => {\n    this.setState({ creating: false });\n  }\n\n  delete = id => {\n    const styles = this.state.styles;\n\n    for (let i = 0; i < styles.length; i++) {\n      if (styles[i] && styles[i].id === id) delete styles[i];\n    }\n    \n    const filteredStyles = styles.filter(style => {\n      return style !== null;\n    });\n\n    this.setState({ styles: filteredStyles });\n    localStorage.setItem(\"styles\", JSON.stringify(filteredStyles));\n  }\n\n  render() {\n    const filteredStyles = [];\n    const filteredColors = [];\n    const { creating, styles, colors } = this.state;\n\n    styles.forEach((style, id) => {\n      if (style) {\n        if (style.text.toLowerCase().includes(this.state.searchText.toLowerCase())) {\n          filteredStyles.push({ id, style });\n        }\n      }\n    });\n\n    colors.forEach((color, id) => {\n      if (color) {\n        if (color.value.toLowerCase().includes(this.state.searchText.toLowerCase())) {\n          filteredColors.push({ id, color });\n        }\n      }\n    });\n\n    return (\n      <div className=\"main-container\">\n        <TopNav />\n        <SearchBar handleChange={this.handleChange} />\n        <div className=\"colors\">\n          <h1>Colors</h1>\n          <ColorList \n            colors={filteredColors}\n            handleSubmit={this.handleSubmit} />\n        </div>\n        <div className=\"styles\">\n          <h1>Fonts</h1>\n          {\n            !creating && styles.length < 1\n              ? <div className=\"empty-style\">No styles to show</div>\n              : null\n          }\n          {\n            creating\n              ? \n                <StyleForm\n                  type=\"create\"\n                  closeCreateForm={this.closeCreateForm}\n                  handleSubmit={this.handleSubmit}\n                />\n              :\n                <div className=\"add-style-btn\">\n                  <button\n                    onClick={() => this.setState({ creating: true })}>\n                    Add\n                  </button>\n                </div>\n          }\n          <StyleList\n            styles={filteredStyles.reverse()}\n            remove={this.delete}\n            handleSubmit={this.handleSubmit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}