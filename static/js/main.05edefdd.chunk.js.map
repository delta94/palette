{"version":3,"sources":["components/header/top-nav.jsx","components/header/search-bar.jsx","components/form/code.jsx","components/form/textarea.jsx","components/form/style-form.jsx","components/style-list/style.jsx","components/style-list/style-list.jsx","components/form/color-form.jsx","components/color-list/color.jsx","components/color-list/color-list.jsx","App.js","serviceWorker.js","index.js"],"names":["TopNav","className","href","target","rel","SearchBar","props","type","onChange","handleChange","placeholder","spellCheck","Code","style","font","size","weight","decoration","color","Textarea","text","e","field","setState","value","handleSubmit","input","preventDefault","closeEditForm","id","state","fonts","textarea","React","createRef","this","current","focus","fetch","then","response","json","googleFonts","i","push","items","family","string","length","split","join","link","document","createElement","getElementsByTagName","appendChild","closeCreateForm","code","map","key","maxLength","onClick","ref","fontFamily","fontSize","fontWeight","fontStyle","textDecoration","Component","StyleForm","Style","editing","remove","StyleList","styles","ColorForm","handleClose","backgroundColor","onKeyDown","Color","ColorList","adding","colors","App","searchText","styleId","localStorage","setItem","JSON","stringify","creating","delete","filteredStyles","filter","parse","getItem","filteredColors","forEach","toLowerCase","includes","reverse","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.05edefdd.chunk.js","sourcesContent":["import React from 'react';\nimport \"./top-nav.css\"\n\nexport const TopNav = () => (\n    <nav className=\"top-nav-container\">\n        <nav className=\"top-nav\">\n            <div className=\"logo rainbow\">\n                <i className=\"fas fa-palette\"></i>\n                Palette\n            </div>\n            <div className=\"icons\">\n                <a\n                    href=\"https://juneseong.com\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"far fa-folder\"></i>\n                </a>\n                <a\n                    href=\"https://github.com/juneseong/palette\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-github\"></i>\n                </a>\n                <a\n                    href=\"https://www.linkedin.com/in/juneseong\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-linkedin-in\"></i>\n                </a>\n                <a\n                    href=\"https://angel.co/u/june-seong\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-angellist\"></i>\n                </a>\n            </div>\n        </nav>\n    </nav>\n)","import React from 'react';\nimport './search-bar.css';\n\nexport const SearchBar = props => (\n    <div className=\"search\">\n        <input\n            type=\"search\"\n            onChange={props.handleChange}\n            placeholder=\"Search by font, color or text\"\n            spellCheck=\"false\"\n        />\n    </div>\n)","import React from 'react';\nimport './code.css';\n\nexport const Code = ({ ...props }) => {\n    const { font, size, weight, style, decoration, color } = props.style;\n\n    return (\n        <div className=\"code-container\">\n            <div className=\"code-instruction\">\n                <button>Copy</button> and paste the code into your CSS file.\n            </div>\n            <div className=\"code\">\n                <p>{font ? `font-family: '${font}';` : null}</p>\n                <p>{size ? `font-size: ${size};` : null}</p>\n                <p>{weight ? `font-weight: ${weight};` : null}</p>\n                <p>{style !== \"normal\" ? `font-style: ${style};` : null}</p>\n                <p>{decoration !== \"none\" ? `text-decoration: ${decoration};` : null}</p>\n                <p>{color ? `color: #${color};` : null}</p>\n            </div>\n        </div>\n    )\n};","import React from 'react';\nimport './textarea.css';\nimport { Code } from './code';\n\nexport default class Textarea extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let text, font, size, weight, style, decoration, color;\n\n        if (props.type === \"create\") {\n            text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\";\n            font = \"Roboto\";\n            size = \"14px\";\n            weight = \"400\";\n            style = \"normal\";\n            decoration = \"none\";\n            color = \"\";\n        } else {\n            text = props.style.text;\n            font = props.style.font;\n            size = props.style.size;\n            weight = props.style.weight;\n            style = props.style.style;\n            decoration = props.style.decoration;\n            color = props.style.color;\n        }\n\n        this.state = { text, font, size, weight, style, decoration, color, fonts: null };\n        this.textarea = React.createRef();\n    }\n\n    componentDidMount() {\n        const fonts = [];\n\n        this.textarea.current.focus();\n        fetch(``)\n            .then(response => response.json())\n            .then(googleFonts => {                \n                for (let i = 0; i < 30; i++) {\n                    fonts.push(googleFonts.items[i].family);\n                }\n\n                this.setState({ fonts: fonts }); \n\n                let href = [`https://fonts.googleapis.com/css2?`, `&display=swap`];\n                let string = \"\";\n\n                for (let i = 0; i < fonts.length; i++) {\n                    let font = fonts[i];\n\n                    if (font.split(\" \").length > 1) font = font.split(\" \").join(\"+\");\n                    \n                    i === 0 ? string += `family=${font}` : string += `&family=${font}`;\n                }\n\n                href = href.join(string);\n\n                let link = document.createElement(\"link\");\n                link.href = href;\n                link.rel = \"stylesheet\";\n                document.getElementsByTagName(\"head\")[0].appendChild(link);\n            });\n    }\n\n    handleChange = (e, field) => {\n        this.setState({ [field]: e.target.value });\n    }\n\n    handleSubmit = (e, input) => {\n        e.preventDefault();\n        const { handleSubmit, style, closeEditForm } = this.props;\n        handleSubmit(\"styles\", input, style.id);\n        closeEditForm();\n    }\n\n    render() {\n        const { type, handleSubmit, closeCreateForm, closeEditForm, code } = this.props;\n        const { text, font, size, weight, style, decoration, color, fonts } = this.state;\n\n        if (code) {\n            return <Code style={this.state} />\n        } else {\n            return (\n                <form>\n                    <div className=\"form-style\">\n                        <div>\n                            <i className=\"fas fa-font\"></i>\n                            <select\n                                className=\"font-select\" value={font}\n                                onChange={e => this.setState({ font: e.target.value })}>\n                                {\n                                    fonts\n                                    ? \n                                        fonts.map((font, i) => (\n                                            <option key={`font-option-${i}`}>\n                                                {font}\n                                            </option>\n                                        ))\n                                    : null\n                                }\n                            </select>\n                        </div>\n                        <div>\n                            <span className=\"material-icons\">\n                                format_size\n                            </span>\n                            <input\n                                className=\"size-input\"\n                                value={size}\n                                onChange={e => this.setState({ size: e.target.value })}\n                                type=\"text\"\n                                maxLength=\"4\"\n                                spellCheck=\"false\"\n                            />\n                        </div>\n                        <div>\n                            <i className=\"fas fa-bold\"></i>\n                            <select\n                                value={weight}\n                                onChange={e => this.setState({ weight: e.target.value })}>\n                                <option>100</option>\n                                <option>200</option>\n                                <option>300</option>\n                                <option>400</option>\n                                <option>500</option>\n                                <option>600</option>\n                                <option>700</option>\n                                <option>800</option>\n                                <option>900</option>\n                            </select>\n                        </div>\n                        <div className=\"font-style-icon\">\n                            <i\n                                className=\"fas fa-italic\"\n                                style={{ color: style === \"italic\" ? \"#0081ff\" : \"\" }}\n                                onClick={() => this.setState({ style: style === \"normal\" ? \"italic\" : \"normal\" })}>\n                            </i>\n                            <i\n                                className=\"fas fa-underline\"\n                                style={{ color: decoration === \"underline\" ? \"#0081ff\" : \"\" }}\n                                onClick={() => this.setState({ decoration: decoration === \"underline\" ? \"none\" : \"underline\" })}>\n                            </i>\n                        </div>\n                        <div className=\"color-input-form\">\n                            <i className=\"fas fa-palette\"></i>\n                            #\n                            <input\n                                className=\"color-input\"\n                                type=\"text\"\n                                placeholder=\"000000\"\n                                maxLength=\"6\"\n                                spellCheck=\"false\"\n                                value={color}\n                                onChange={e => this.setState({ color: e.target.value })}\n                            />\n                        </div>\n                    </div>\n                    <textarea\n                        ref={this.textarea}\n                        placeholder=\"Add text\"\n                        value={text}\n                        onChange={e => this.handleChange(e, \"text\")}\n                        spellCheck=\"false\"\n                        style={{\n                            fontFamily: font,\n                            fontSize: size,\n                            fontWeight: weight,\n                            fontStyle: style,\n                            textDecoration: decoration,\n                            color: \"#\" + color\n                        }}\n                    />\n                    {\n                        type === \"create\"\n                            ?\n                                <div className=\"cancel-save-btn\">\n                                    <button onClick={closeCreateForm}>\n                                        Cancel\n                                    </button>\n                                    <button onClick={() => handleSubmit(\"styles\", this.state)}>\n                                        Save\n                                    </button>\n                                </div>\n                            :\n                                <div className=\"cancel-save-btn\">\n                                    <button onClick={closeEditForm}>\n                                        Cancel\n                                    </button>\n                                    <button onClick={e => this.handleSubmit(e, this.state)}>\n                                        Save\n                                    </button>\n                                </div>\n                    }\n                </form>\n            )\n        }\n    }\n}","import React from 'react';\nimport './style-form.css';\nimport Textarea from './textarea';\n\nexport default class StyleForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            code: false\n        };\n    }\n\n    toggleCode() {\n        this.setState({ code: !this.state.code });\n    }\n    \n    render() {\n        const { type, handleSubmit, closeCreateForm, closeEditForm, style } = this.props;\n        const { code } = this.state;\n\n        return (\n            <div className=\"form-container\">\n                <div className=\"form-header\">\n                    <ul>\n                        <li \n                            className={!code ? \"active\" : \"\"}\n                            onClick={() => this.setState({ code: false })}>\n                            {type === \"create\" ? \"Add Style\" : \"Edit Style\"}\n                        </li>\n                        <li className={code ? \"active\" : \"\"}\n                            onClick={() => this.setState({ code: true })}>\n                            Code\n                        </li>\n                        <li></li>\n                    </ul>\n                </div>\n                <Textarea \n                    handleSubmit={handleSubmit}\n                    closeCreateForm={closeCreateForm}\n                    closeEditForm={closeEditForm}\n                    type={type}\n                    style={style}\n                    code={code}\n                />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './style.css';\nimport StyleForm from '../form/style-form';\n\nexport default class Style extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editing: false\n        };\n    }\n\n    closeEditForm = () => {\n        this.setState({ editing: false });\n    }\n\n    render() {\n\n        const { style, remove, handleSubmit } = this.props;\n\n        return (\n            <>\n                {\n                    this.state.editing\n                        ?\n                            <StyleForm \n                                type=\"edit\" \n                                style={style} \n                                closeEditForm={this.closeEditForm} \n                                handleSubmit={handleSubmit}\n                            />\n                        :\n                            <div className=\"style\">\n                                <div className=\"edit-delete-style\">\n                                    <button onClick={() => this.setState({ editing: true })}>\n                                        Edit\n                                    </button>\n                                    <button onClick={() => remove(style.id)}>\n                                        Delete\n                                    </button>\n                                </div>\n                                <span\n                                    style={{\n                                        fontFamily: style.font,\n                                        fontSize: style.size,\n                                        fontWeight: style.weight,\n                                        fontStyle: style.style,\n                                        textDecoration: style.decoration,\n                                        color: \"#\" + style.color\n                                    }}>\n                                    {style.text}\n                                </span>\n                            </div>\n                }\n            </>\n        )\n    }\n}","import React from 'react';\nimport Style from './style';\nimport './style-list.css';\n\nexport const StyleList = props => (\n    <div className=\"style-list\">\n        {\n            props.styles.map(({ style }, i) =>\n                <Style\n                    key={`style-${i}`}\n                    style={style}\n                    remove={props.remove}\n                    handleSubmit={props.handleSubmit}\n                />\n            )\n        }\n    </div>\n)","import React from 'react';\nimport './color-form.css';\n\nexport default class ColorForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            color: \"\"\n        };\n\n        this.textarea = React.createRef();\n    }\n\n    componentDidMount() {\n        this.textarea.current.focus();\n    }\n\n    render() {\n        const { handleSubmit, handleClose } = this.props;\n        const { color } = this.state;\n\n        return (\n            <div className=\"add-color\">\n                <div\n                    className=\"colored\"\n                    style={{ backgroundColor: `#${color}` }}>\n                </div>\n                <div className=\"add-color-form\">\n                    <div className=\"color-code\">\n                        #\n                        <input\n                            ref={this.textarea}\n                            type=\"text\"\n                            spellCheck=\"false\"\n                            placeholder=\"000000\"\n                            maxLength=\"6\"\n                            onChange={e => this.setState({ color: e.target.value })}\n                            value={color}\n                            onKeyDown={e => e.key === \"Enter\" \n                                ? (handleSubmit(\"colors\", color), handleClose()) \n                                : null}\n                        />\n                        <i\n                            className=\"fas fa-times\"\n                            onClick={handleClose}>\n                        </i>\n                    </div>\n                    <span className=\"color-code-instruction\">Press enter to save.</span>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './color.css';\n\nexport default class Color extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    render() {\n        const { color } = this.props;\n        return (\n            <div \n                className=\"colored\"\n                style={{ backgroundColor: `#${color.value}` }}>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './color-list.css';\nimport ColorForm from '../form/color-form';\nimport Color from './color';\n\nexport default class ColorList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            adding: false\n        };\n    }\n\n    handleClose = () => {\n        this.setState({ adding: false });\n    }\n\n    render() {\n        const { colors } = this.props;\n\n        return (\n            <div className=\"color-list\">\n                {\n                    colors.map(({ color }, i) =>\n                        <Color\n                            key={`color-${i}`}\n                            color={color}\n                        />\n                    )\n                }\n                {\n                    this.state.adding\n                        ? \n                            <ColorForm \n                                handleClose={this.handleClose}\n                                handleSubmit={this.props.handleSubmit}\n                            />\n                        :\n                            <div className=\"add-color\"\n                                onClick={() => this.setState({ adding: true })}>\n                                <i className=\"fas fa-plus\"></i>\n                            </div> \n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport './reset.css';\nimport { TopNav } from './components/header/top-nav';\nimport { SearchBar } from './components/header/search-bar';\nimport StyleForm from './components/form/style-form';\nimport { StyleList } from './components/style-list/style-list';\nimport ColorList from './components/color-list/color-list';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      styles: [],\n      colors: [],\n      searchText: \"\",\n      creating: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ \n      styles: JSON.parse(localStorage.getItem(\"styles\")) || [],\n      colors: JSON.parse(localStorage.getItem(\"colors\")) || []\n    });\n  }\n\n  handleChange = e => {\n    this.setState({ searchText: e.target.value });\n  }\n\n  handleSubmit = (type, input, styleId=null) => {\n      const key = this.state[type];\n      let id = styleId !== null ? styleId : key.length;\n      let value;\n\n      if (styleId === null) {\n        for (let i = 0; i < key.length; i++) {\n          if (key[i].id !== i) id = i;\n        }\n      }\n\n    if (type === \"styles\") {\n      const { text, font, size, weight, style, decoration, color } = input;\n\n      value = {\n        id,\n        text: text,\n        font: font,\n        size: size,\n        weight: weight,\n        style: style,\n        decoration: decoration,\n        color: color\n      };\n    } else {\n      value = { id, value: input };\n    }\n\n      if (styleId !== null) {\n        for (let i = 0; i < key.length; i++) {\n          if (key[i].id === id) key[i] = value;\n        }\n      } else { \n        key.push(value);\n      }\n\n      localStorage.setItem(type, JSON.stringify(key));\n      this.setState({ [type]: key });\n      if (type === \"styles\" && styleId === null) this.closeCreateForm();\n  }\n\n  closeCreateForm = () => {\n    this.setState({ creating: false });\n  }\n\n  delete = id => {\n    const styles = this.state.styles;\n\n    for (let i = 0; i < styles.length; i++) {\n      if (styles[i] && styles[i].id === id) delete styles[i];\n    }\n    \n    const filteredStyles = styles.filter(style => {\n      return style !== null;\n    });\n\n    this.setState({ styles: filteredStyles });\n    localStorage.setItem(\"styles\", JSON.stringify(filteredStyles));\n  }\n\n  render() {\n    const filteredStyles = [];\n    const filteredColors = [];\n    const { creating, styles, colors } = this.state;\n\n    styles.forEach((style, id) => {\n      if (style) {\n        if (style.text.toLowerCase().includes(this.state.searchText.toLowerCase())) {\n          filteredStyles.push({ id, style });\n        }\n      }\n    });\n\n    colors.forEach((color, id) => {\n      if (color) {\n        if (color.value.toLowerCase().includes(this.state.searchText.toLowerCase())) {\n          filteredColors.push({ id, color });\n        }\n      }\n    });\n\n    return (\n      <>\n        <TopNav />\n        <SearchBar handleChange={this.handleChange} />\n        <div className=\"main-container\">\n          <div className=\"colors\">\n            <h1>Colors</h1>\n            <ColorList \n              colors={filteredColors}\n              handleSubmit={this.handleSubmit} />\n          </div>\n          <div className=\"styles\">\n            <h1>Fonts</h1>\n            {\n              !creating && styles.length < 1\n                ? <div className=\"empty-style\">No styles to show</div>\n                : null\n            }\n            {\n              creating\n                ? \n                  <StyleForm\n                    type=\"create\"\n                    closeCreateForm={this.closeCreateForm}\n                    handleSubmit={this.handleSubmit}\n                  />\n                :\n                  <div className=\"add-style-btn\">\n                    <button\n                      onClick={() => this.setState({ creating: true })}>\n                      Add\n                    </button>\n                  </div>\n            }\n            <StyleList\n              styles={filteredStyles.reverse()}\n              remove={this.delete}\n              handleSubmit={this.handleSubmit}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}