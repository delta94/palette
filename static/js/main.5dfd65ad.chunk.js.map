{"version":3,"sources":["components/header/top-nav.jsx","components/header/search-bar.jsx","components/form/code.jsx","components/form/textarea.jsx","components/form/style-form.jsx","components/style-list/style.jsx","components/style-list/style-list.jsx","components/form/color-form.jsx","components/color-list/color.jsx","components/color-list/color-list.jsx","App.js","serviceWorker.js","index.js"],"names":["TopNav","className","href","target","rel","SearchBar","props","type","onChange","handleChange","placeholder","spellCheck","Code","style","font","size","weight","decoration","color","category","Textarea","text","e","field","setState","value","handleSubmit","input","preventDefault","closeEditForm","id","state","fonts","weights","textarea","React","createRef","this","current","focus","fetch","process","REACT_APP_API_KEY","then","response","json","googleFonts","i","push","items","string","length","family","variants","filter","regularIdx","indexOf","split","join","link","document","createElement","classList","add","getElementsByTagName","appendChild","prevProps","prevState","newHref","querySelector","closeCreateForm","code","map","key","maxLength","onClick","ref","fontFamily","fontSize","fontWeight","fontStyle","textDecoration","Component","StyleForm","Style","editing","remove","StyleList","styles","ColorForm","handleClose","backgroundColor","onKeyDown","Color","ColorList","adding","colors","App","searchText","styleId","localStorage","setItem","JSON","stringify","creating","delete","filteredStyles","parse","getItem","filteredColors","forEach","toLowerCase","includes","reverse","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"6cAGaA,G,kBAAS,kBAClB,yBAAKC,UAAU,qBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,gBACX,uBAAGA,UAAU,mBADjB,WAIA,yBAAKA,UAAU,SACX,uBACIC,KAAK,wBACLC,OAAO,SACPC,IAAI,uBACJ,uBAAGH,UAAU,mBAEjB,uBACIC,KAAK,uCACLC,OAAO,SACPC,IAAI,uBACJ,uBAAGH,UAAU,mBAEjB,uBACIC,KAAK,wCACLC,OAAO,SACPC,IAAI,uBACJ,uBAAGH,UAAU,wBAEjB,uBACIC,KAAK,gCACLC,OAAO,SACPC,IAAI,uBACJ,uBAAGH,UAAU,2BC9BpBI,G,MAAY,SAAAC,GAAK,OAC1B,yBAAKL,UAAU,UACX,2BACIM,KAAK,SACLC,SAAUF,EAAMG,aAChBC,YAAY,gCACZC,WAAW,aCNVC,G,kBAAO,SAAC,GAAkB,IAAD,sBACuCC,MAAjEC,EAD0B,EAC1BA,KAAMC,EADoB,EACpBA,KAAMC,EADc,EACdA,OAAQH,EADM,EACNA,MAAOI,EADD,EACCA,WAAYC,EADb,EACaA,MAAOC,EADpB,EACoBA,SAEtD,OACI,yBAAKlB,UAAU,kBACX,yBAAKA,UAAU,oBACX,wCADJ,2CAGA,yBAAKA,UAAU,QACX,2BAAIa,EAAI,wBAAoBA,EAApB,cAA8BK,EAA9B,KAA4C,MACpD,2BAAIJ,EAAI,qBAAiBA,EAAjB,KAA2B,MACnC,2BAAIC,EAAM,uBAAmBA,EAAnB,KAA+B,MACzC,2BAAc,WAAVH,EAAA,sBAAoCA,EAApC,KAA+C,MACnD,2BAAmB,SAAfI,EAAA,2BAA4CA,EAA5C,KAA4D,MAChE,2BAAIC,EAAK,kBAAcA,EAAd,KAAyB,UCb7BE,E,kDACjB,WAAYd,GAAQ,IAAD,EAGXe,EAAMP,EAAMC,EAAMC,EAAQH,EAAOI,EAAYC,EAHlC,4BACf,cAAMZ,IAoHVG,aAAe,SAACa,EAAGC,GACf,EAAKC,SAAL,eAAiBD,EAAQD,EAAEnB,OAAOsB,SAtHnB,EAyHnBC,aAAe,SAACJ,EAAGK,GACfL,EAAEM,iBADuB,MAEsB,EAAKtB,MAA5CoB,EAFiB,EAEjBA,aAAcb,EAFG,EAEHA,MAAOgB,EAFJ,EAEIA,cAC7BH,EAAa,SAAUC,EAAOd,EAAMiB,IACpCD,KAxHmB,WAAfvB,EAAMC,MACNc,EAAO,2DACPP,EAAO,SACPC,EAAO,OACPC,EAAS,MACTH,EAAQ,SACRI,EAAa,OACbC,EAAQ,KAERG,EAAOf,EAAMO,MAAMQ,KACnBP,EAAOR,EAAMO,MAAMC,KACnBC,EAAOT,EAAMO,MAAME,KACnBC,EAASV,EAAMO,MAAMG,OACrBH,EAAQP,EAAMO,MAAMA,MACpBI,EAAaX,EAAMO,MAAMI,WACzBC,EAAQZ,EAAMO,MAAMK,OAGxB,EAAKa,MAAQ,CACTV,OACAP,OACAC,OACAC,SACAH,QACAI,aACAC,QACAc,MAAO,KACPC,QAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,OAC7Cd,SAAU,MAGd,EAAKe,SAAWC,IAAMC,YApCP,E,gEAuCE,IAAD,OACVJ,EAAQ,GAEdK,KAAKH,SAASI,QAAQC,QACtBC,MAAM,uEAAD,OAAwEC,2HAAYC,oBACpFC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACpBf,EAAMgB,KAAKF,EAAYG,MAAMF,IAGjC,EAAKvB,SAAS,CAAEQ,UAKhB,IAHA,IAAI9B,EAAO,CAAC,qCAAD,iBACPgD,EAAS,GAEJH,EAAI,EAAGA,EAAIf,EAAMmB,OAAQJ,IAAK,CACnC,IAAMjC,EAAOkB,EAAMe,GACfK,EAAStC,EAAKsC,OAElB,GAAIA,IAAW,EAAKrB,MAAMjB,KAAM,CAC5B,IAAMuC,EAAWvC,EAAKuC,SAASC,QAAO,SAAAtC,GAAM,OAAIA,EAAOmC,OAAS,GAAgB,YAAXnC,KAC/DuC,EAAaF,EAASG,QAAQ,WAEjB,OAAfD,IAAqBF,EAASE,GAAc,OAC5CH,EAAOK,MAAM,KAAKN,OAAS,IAAGC,EAASA,EAAOK,MAAM,KAAKC,KAAK,MAExDR,GAAJ,IAANH,EAAgB,iBAAcK,GAAiB,kBAAeA,GAC9DF,GAAM,gBAAaG,EAASK,KAAK,MAEjC,EAAKlC,SAAS,CAAEL,SAAUL,EAAKK,YAIvCjB,EAAOA,EAAKwD,KAAKR,GAEjB,IAAIS,EAAOC,SAASC,cAAc,QAClCF,EAAKzD,KAAOA,EACZyD,EAAKvD,IAAM,aACXuD,EAAKG,UAAUC,IAAI,qBACnBH,SAASI,qBAAqB,QAAQ,GAAGC,YAAYN,Q,yCAI9CO,EAAWC,GAAY,IAAD,EACb9B,KAAKN,MAArBjB,EAD6B,EAC7BA,KAAMkB,EADuB,EACvBA,MAEd,GAAImC,EAAUrD,OAASA,EAAM,CAKzB,IAJA,IAAImB,EACAmC,EAAU,CAAC,qCAAD,iBACVlB,EAAS,GAEJH,EAAI,EAAGA,EAAIf,EAAMmB,OAAQJ,IAAK,CAC/B,IAAIK,EAASpB,EAAMe,GAAGK,OAC1B,GAAIA,IAAWtC,EAAM,CACjB,IAGMyC,GAFNtB,EADiBD,EAAMe,GAAGM,SACPC,QAAO,SAAAtC,GAAM,OAAIA,EAAOmC,OAAS,GAAgB,YAAXnC,MAE9BwC,QAAQ,WAEhB,OAAfD,IAAqBtB,EAAQsB,GAAc,OAE3CH,EAAOK,MAAM,KAAKN,OAAS,IAAGC,EAASA,EAAOK,MAAM,KAAKC,KAAK,MACxDR,GAAJ,IAANH,EAAgB,iBAAcK,GAAiB,kBAAeA,GAC9DF,GAAM,gBAAajB,EAAQyB,KAAK,MAEhCrB,KAAKb,SAAS,CAAES,UAASd,SAAUa,EAAMe,GAAG5B,WAE5C,OAIRiD,EAAUA,EAAQV,KAAKR,GACPU,SAASS,cAAc,sBAC/BnE,KAAOkE,K,+BAeb,IAAD,SACgE/B,KAAK/B,MAAlEC,EADH,EACGA,KAAMmB,EADT,EACSA,aAAc4C,EADvB,EACuBA,gBAAiBzC,EADxC,EACwCA,cAAe0C,EADvD,EACuDA,KADvD,EAE0ElC,KAAKN,MAA5EV,EAFH,EAEGA,KAAMP,EAFT,EAESA,KAAMC,EAFf,EAEeA,KAAMC,EAFrB,EAEqBA,OAAQH,EAF7B,EAE6BA,MAAOI,EAFpC,EAEoCA,WAAYC,EAFhD,EAEgDA,MAAOc,EAFvD,EAEuDA,MAAOC,EAF9D,EAE8DA,QAEnE,OAAIsC,EACO,kBAAC,EAAD,CAAM1D,MAAOwB,KAAKN,QAGrB,8BACI,yBAAK9B,UAAU,cACX,6BACI,uBAAGA,UAAU,gBACb,4BACIA,UAAU,cAAcwB,MAAOX,EAC/BN,SAAU,SAAAc,GAAC,OAAI,EAAKE,SAAS,CAAEV,KAAMQ,EAAEnB,OAAOsB,UAE1CO,EAEIA,EAAMwC,KAAI,SAAC1D,EAAMiC,GAAP,OACN,4BAAQ0B,IAAG,sBAAiB1B,IACvBjC,EAAKsC,WAGhB,OAId,6BACI,0BAAMnD,UAAU,kBAAhB,eAGA,2BACIA,UAAU,aACVwB,MAAOV,EACPP,SAAU,SAAAc,GAAC,OAAI,EAAKE,SAAS,CAAET,KAAMO,EAAEnB,OAAOsB,SAC9ClB,KAAK,OACLmE,UAAU,IACV/D,WAAW,WAGnB,6BACI,uBAAGV,UAAU,gBACb,4BACIwB,MAAOT,EACPR,SAAU,SAAAc,GAAC,OAAI,EAAKE,SAAS,CAAER,OAAQM,EAAEnB,OAAOsB,UAE5CQ,EAEII,KAAKN,MAAME,QAAQuC,KAAI,SAACxD,EAAQ+B,GAAT,OACnB,4BAAQ0B,IAAG,wBAAmB1B,IACzB/B,MAGX,OAId,yBAAKf,UAAU,mBACX,uBACIA,UAAU,gBACVY,MAAO,CAAEK,MAAiB,WAAVL,EAAqB,UAAY,IACjD8D,QAAS,kBAAM,EAAKnD,SAAS,CAAEX,MAAiB,WAAVA,EAAqB,SAAW,cAE1E,uBACIZ,UAAU,mBACVY,MAAO,CAAEK,MAAsB,cAAfD,EAA6B,UAAY,IACzD0D,QAAS,kBAAM,EAAKnD,SAAS,CAAEP,WAA2B,cAAfA,EAA6B,OAAS,kBAGzF,yBAAKhB,UAAU,oBACX,uBAAGA,UAAU,mBADjB,IAGI,2BACIA,UAAU,cACVM,KAAK,OACLG,YAAY,SACZgE,UAAU,IACV/D,WAAW,QACXc,MAAOP,EACPV,SAAU,SAAAc,GAAC,OAAI,EAAKE,SAAS,CAAEN,MAAOI,EAAEnB,OAAOsB,aAI3D,8BACImD,IAAKvC,KAAKH,SACVxB,YAAY,WACZe,MAAOJ,EACPb,SAAU,SAAAc,GAAC,OAAI,EAAKb,aAAaa,EAAG,SACpCX,WAAW,QACXE,MAAO,CACHgE,WAAY/D,EACZgE,SAAU/D,EACVgE,WAAY/D,EACZgE,UAAWnE,EACXoE,eAAgBhE,EAChBC,MAAO,IAAMA,KAIR,WAATX,EAEQ,yBAAKN,UAAU,mBACX,4BAAQ0E,QAASL,GAAjB,UAGA,4BAAQK,QAAS,kBAAMjD,EAAa,SAAU,EAAKK,SAAnD,SAKJ,yBAAK9B,UAAU,mBACX,4BAAQ0E,QAAS9C,GAAjB,UAGA,4BAAQ8C,QAAS,SAAArD,GAAC,OAAI,EAAKI,aAAaJ,EAAG,EAAKS,SAAhD,c,GAnPEI,IAAM+C,WCAvBC,E,kDACjB,WAAY7E,GAAQ,IAAD,8BACf,cAAMA,IAEDyB,MAAQ,CACTwC,MAAM,GAJK,E,yDASflC,KAAKb,SAAS,CAAE+C,MAAOlC,KAAKN,MAAMwC,S,+BAG5B,IAAD,SACiElC,KAAK/B,MAAnEC,EADH,EACGA,KAAMmB,EADT,EACSA,aAAc4C,EADvB,EACuBA,gBAAiBzC,EADxC,EACwCA,cAAehB,EADvD,EACuDA,MACpD0D,EAASlC,KAAKN,MAAdwC,KAER,OACI,yBAAKtE,UAAU,kBACX,yBAAKA,UAAU,eACX,4BACI,wBACIA,UAAYsE,EAAkB,GAAX,SACnBI,QAAS,kBAAM,EAAKnD,SAAS,CAAE+C,MAAM,MAC3B,WAAThE,EAAoB,YAAc,cAEvC,wBAAIN,UAAWsE,EAAO,SAAW,GAC7BI,QAAS,kBAAM,EAAKnD,SAAS,CAAE+C,MAAM,MADzC,QAIA,+BAGR,kBAAC,EAAD,CACI7C,aAAcA,EACd4C,gBAAiBA,EACjBzC,cAAeA,EACftB,KAAMA,EACNM,MAAOA,EACP0D,KAAMA,S,GAvCapC,IAAM+C,WCAxBE,G,wDACjB,WAAY9E,GAAQ,IAAD,8BACf,cAAMA,IAOVuB,cAAgB,WACZ,EAAKL,SAAS,CAAE6D,SAAS,KANzB,EAAKtD,MAAQ,CACTsD,SAAS,GAJE,E,qDAYT,IAAD,SAEmChD,KAAK/B,MAArCO,EAFH,EAEGA,MAAOyE,EAFV,EAEUA,OAAQ5D,EAFlB,EAEkBA,aAEvB,OACI,oCAEQW,KAAKN,MAAMsD,QAEH,kBAAC,EAAD,CACI9E,KAAK,OACLM,MAAOA,EACPgB,cAAeQ,KAAKR,cACpBH,aAAcA,IAGlB,yBAAKzB,UAAU,SACX,yBAAKA,UAAU,qBACX,4BAAQ0E,QAAS,kBAAM,EAAKnD,SAAS,CAAE6D,SAAS,MAAhD,QAGA,4BAAQV,QAAS,kBAAMW,EAAOzE,EAAMiB,MAApC,WAIJ,0BACIjB,MAAO,CACHgE,WAAYhE,EAAMC,KAClBgE,SAAUjE,EAAME,KAChBgE,WAAYlE,EAAMG,OAClBgE,UAAWnE,EAAMA,MACjBoE,eAAgBpE,EAAMI,WACtBC,MAAO,IAAML,EAAMK,QAEtBL,EAAMQ,Y,GA/CRc,IAAM+C,YCA5BK,G,MAAY,SAAAjF,GAAK,OAC1B,yBAAKL,UAAU,cAEPK,EAAMkF,OAAOhB,KAAI,WAAYzB,GAAZ,IAAGlC,EAAH,EAAGA,MAAH,OACb,kBAAC,EAAD,CACI4D,IAAG,gBAAW1B,GACdlC,MAAOA,EACPyE,OAAQhF,EAAMgF,OACd5D,aAAcpB,EAAMoB,qBCTnB+D,G,8DACjB,WAAYnF,GAAQ,IAAD,8BACf,cAAMA,IAEDyB,MAAQ,CACTb,MAAO,IAGX,EAAKgB,SAAWC,IAAMC,YAPP,E,gEAWfC,KAAKH,SAASI,QAAQC,U,+BAGhB,IAAD,SACiCF,KAAK/B,MAAnCoB,EADH,EACGA,aAAcgE,EADjB,EACiBA,YACdxE,EAAUmB,KAAKN,MAAfb,MAER,OACI,yBAAKjB,UAAU,aACX,yBACIA,UAAU,UACVY,MAAO,CAAE8E,gBAAgB,IAAD,OAAMzE,MAElC,yBAAKjB,UAAU,kBACX,yBAAKA,UAAU,cAAf,IAEI,2BACI2E,IAAKvC,KAAKH,SACV3B,KAAK,OACLI,WAAW,QACXD,YAAY,SACZgE,UAAU,IACVlE,SAAU,SAAAc,GAAC,OAAI,EAAKE,SAAS,CAAEN,MAAOI,EAAEnB,OAAOsB,SAC/CA,MAAOP,EACP0E,UAAW,SAAAtE,GAAC,MAAc,UAAVA,EAAEmD,KACX/C,EAAa,SAAUR,GAAQwE,KAChC,QAEV,uBACIzF,UAAU,eACV0E,QAASe,KAGjB,0BAAMzF,UAAU,0BAAhB,8B,GA7CmBkC,IAAM+C,YCAxBW,G,wDACjB,WAAYvF,GAAQ,IAAD,8BACf,cAAMA,IAEDyB,MAAQ,GAHE,E,qDAQT,IACEb,EAAUmB,KAAK/B,MAAfY,MACR,OACI,yBACIjB,UAAU,UACVY,MAAO,CAAE8E,gBAAgB,IAAD,OAAMzE,EAAMO,c,GAdjBU,IAAM+C,YCEpBY,E,kDACjB,WAAYxF,GAAQ,IAAD,8BACf,cAAMA,IAOVoF,YAAc,WACV,EAAKlE,SAAS,CAAEuE,QAAQ,KANxB,EAAKhE,MAAQ,CACTgE,QAAQ,GAJG,E,qDAYT,IAAD,OACGC,EAAW3D,KAAK/B,MAAhB0F,OAER,OACI,yBAAK/F,UAAU,cAEP+F,EAAOxB,KAAI,WAAYzB,GAAZ,IAAG7B,EAAH,EAAGA,MAAH,OACP,kBAAC,EAAD,CACIuD,IAAG,gBAAW1B,GACd7B,MAAOA,OAKfmB,KAAKN,MAAMgE,OAEH,kBAAC,EAAD,CACIL,YAAarD,KAAKqD,YAClBhE,aAAcW,KAAK/B,MAAMoB,eAG7B,yBAAKzB,UAAU,YACX0E,QAAS,kBAAM,EAAKnD,SAAS,CAAEuE,QAAQ,MACvC,uBAAG9F,UAAU,sB,GApCNkC,IAAM+C,WC0J9Be,E,kDArJb,aAAe,IAAD,8BACZ,gBAiBFxF,aAAe,SAAAa,GACb,EAAKE,SAAS,CAAE0E,WAAY5E,EAAEnB,OAAOsB,SAnBzB,EAsBdC,aAAe,SAACnB,EAAMoB,GAAyB,IAGvCF,EAHqB0E,EAAiB,uDAAT,KAC3B1B,EAAM,EAAK1C,MAAMxB,GACnBuB,EAAiB,OAAZqE,EAAmBA,EAAU1B,EAAItB,OAG1C,GAAgB,OAAZgD,EACF,IAAK,IAAIpD,EAAI,EAAGA,EAAI0B,EAAItB,OAAQJ,IAC1B0B,EAAI1B,GAAGjB,KAAOiB,IAAGjB,EAAKiB,GAIhC,GAAa,WAATxC,EAAmB,CAAC,IACdc,EAAuDM,EAAvDN,KAAMP,EAAiDa,EAAjDb,KAAMC,EAA2CY,EAA3CZ,KAAMC,EAAqCW,EAArCX,OAAQH,EAA6Bc,EAA7Bd,MAAOI,EAAsBU,EAAtBV,WAAYC,EAAUS,EAAVT,MAErDO,EAAQ,CACNK,KACAT,KAAMA,EACNP,KAAMA,EACNC,KAAMA,EACNC,OAAQA,EACRH,MAAOA,EACPI,WAAYA,EACZC,MAAOA,QAGTO,EAAQ,CAAEK,KAAIL,MAAOE,GAGrB,GAAgB,OAAZwE,EACF,IAAK,IAAIpD,EAAI,EAAGA,EAAI0B,EAAItB,OAAQJ,IAC1B0B,EAAI1B,GAAGjB,KAAOA,IAAI2C,EAAI1B,GAAKtB,QAGjCgD,EAAIzB,KAAKvB,GAGX2E,aAAaC,QAAQ9F,EAAM+F,KAAKC,UAAU9B,IAC1C,EAAKjD,SAAL,eAAiBjB,EAAOkE,IACX,WAATlE,GAAiC,OAAZ4F,GAAkB,EAAK7B,mBA5DtC,EA+DdA,gBAAkB,WAChB,EAAK9C,SAAS,CAAEgF,UAAU,KAhEd,EAmEdC,OAAS,SAAA3E,GAGP,IAFA,IAAM0D,EAAS,EAAKzD,MAAMyD,OAEjBzC,EAAI,EAAGA,EAAIyC,EAAOrC,OAAQJ,IAC7ByC,EAAOzC,IAAMyC,EAAOzC,GAAGjB,KAAOA,UAAW0D,EAAOzC,GAGtD,IAAM2D,EAAiBlB,EAAOlC,QAAO,SAAAzC,GACnC,OAAiB,OAAVA,KAGT,EAAKW,SAAS,CAAEgE,OAAQkB,IACxBN,aAAaC,QAAQ,SAAUC,KAAKC,UAAUG,KA5E9C,EAAK3E,MAAQ,CACXyD,OAAQ,GACRQ,OAAQ,GACRE,WAAY,GACZM,UAAU,GAPA,E,gEAYZnE,KAAKb,SAAS,CACZgE,OAAQc,KAAKK,MAAMP,aAAaQ,QAAQ,YAAc,GACtDZ,OAAQM,KAAKK,MAAMP,aAAaQ,QAAQ,YAAc,O,+BAoEhD,IAAD,OACDF,EAAiB,GACjBG,EAAiB,GAFhB,EAG8BxE,KAAKN,MAAlCyE,EAHD,EAGCA,SAAUhB,EAHX,EAGWA,OAAQQ,EAHnB,EAGmBA,OAkB1B,OAhBAR,EAAOsB,SAAQ,SAACjG,EAAOiB,GACjBjB,GACEA,EAAMQ,KAAK0F,cAAcC,SAAS,EAAKjF,MAAMmE,WAAWa,gBAC1DL,EAAe1D,KAAK,CAAElB,KAAIjB,aAKhCmF,EAAOc,SAAQ,SAAC5F,EAAOY,GACjBZ,GACEA,EAAMO,MAAMsF,cAAcC,SAAS,EAAKjF,MAAMmE,WAAWa,gBAC3DF,EAAe7D,KAAK,CAAElB,KAAIZ,aAM9B,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWT,aAAc4B,KAAK5B,eAC9B,yBAAKR,UAAU,kBACb,yBAAKA,UAAU,UACb,sCACA,kBAAC,EAAD,CACE+F,OAAQa,EACRnF,aAAcW,KAAKX,gBAEvB,yBAAKzB,UAAU,UACb,sCAEGuG,GAAYhB,EAAOrC,OAAS,EACzB,yBAAKlD,UAAU,eAAf,qBACA,KAGJuG,EAEI,kBAAC,EAAD,CACEjG,KAAK,SACL+D,gBAAiBjC,KAAKiC,gBACtB5C,aAAcW,KAAKX,eAGrB,yBAAKzB,UAAU,iBACb,4BACE0E,QAAS,kBAAM,EAAKnD,SAAS,CAAEgF,UAAU,MAD3C,QAMR,kBAAC,EAAD,CACEhB,OAAQkB,EAAeO,UACvB3B,OAAQjD,KAAKoE,OACb/E,aAAcW,KAAKX,sB,GA7IfS,IAAM+C,WCGJgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF7D,SAAS8D,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlF,MAAK,SAAAmF,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5dfd65ad.chunk.js","sourcesContent":["import React from 'react';\nimport \"./top-nav.css\"\n\nexport const TopNav = () => (\n    <nav className=\"top-nav-container\">\n        <nav className=\"top-nav\">\n            <div className=\"logo rainbow\">\n                <i className=\"fas fa-palette\"></i>\n                Palette\n            </div>\n            <div className=\"icons\">\n                <a\n                    href=\"https://juneseong.com\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"far fa-folder\"></i>\n                </a>\n                <a\n                    href=\"https://github.com/juneseong/palette\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-github\"></i>\n                </a>\n                <a\n                    href=\"https://www.linkedin.com/in/juneseong\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-linkedin-in\"></i>\n                </a>\n                <a\n                    href=\"https://angel.co/u/june-seong\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\">\n                    <i className=\"fab fa-angellist\"></i>\n                </a>\n            </div>\n        </nav>\n    </nav>\n)","import React from 'react';\nimport './search-bar.css';\n\nexport const SearchBar = props => (\n    <div className=\"search\">\n        <input\n            type=\"search\"\n            onChange={props.handleChange}\n            placeholder=\"Search by font, color or text\"\n            spellCheck=\"false\"\n        />\n    </div>\n)","import React from 'react';\nimport './code.css';\n\nexport const Code = ({ ...props }) => {\n    const { font, size, weight, style, decoration, color, category } = props.style;\n\n    return (\n        <div className=\"code-container\">\n            <div className=\"code-instruction\">\n                <button>Copy</button> and paste the code into your CSS file.\n            </div>\n            <div className=\"code\">\n                <p>{font ? `font-family: '${font}', ${category};` : null}</p>\n                <p>{size ? `font-size: ${size};` : null}</p>\n                <p>{weight ? `font-weight: ${weight};` : null}</p>\n                <p>{style !== \"normal\" ? `font-style: ${style};` : null}</p>\n                <p>{decoration !== \"none\" ? `text-decoration: ${decoration};` : null}</p>\n                <p>{color ? `color: #${color};` : null}</p>\n            </div>\n        </div>\n    )\n};","import React from 'react';\nimport './textarea.css';\nimport { Code } from './code';\n\nexport default class Textarea extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let text, font, size, weight, style, decoration, color;\n\n        if (props.type === \"create\") {\n            text = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\";\n            font = \"Roboto\";\n            size = \"15px\";\n            weight = \"400\";\n            style = \"normal\";\n            decoration = \"none\";\n            color = \"\";\n        } else {\n            text = props.style.text;\n            font = props.style.font;\n            size = props.style.size;\n            weight = props.style.weight;\n            style = props.style.style;\n            decoration = props.style.decoration;\n            color = props.style.color;\n        }\n\n        this.state = { \n            text, \n            font, \n            size, \n            weight, \n            style, \n            decoration, \n            color, \n            fonts: null, \n            weights: [\"100\", \"300\", \"400\", \"500\", \"700\", \"900\"],\n            category: null\n        };\n\n        this.textarea = React.createRef();\n    }\n\n    componentDidMount() {\n        const fonts = [];\n\n        this.textarea.current.focus();\n        fetch(`https://www.googleapis.com/webfonts/v1/webfonts?sort=popularity&key=${process.env.REACT_APP_API_KEY}`)\n            .then(response => response.json())\n            .then(googleFonts => {                \n                for (let i = 0; i < 40; i++) {\n                    fonts.push(googleFonts.items[i]);\n                }\n\n                this.setState({ fonts }); \n\n                let href = [`https://fonts.googleapis.com/css2?`, `&display=swap`];\n                let string = \"\";\n\n                for (let i = 0; i < fonts.length; i++) {\n                    const font = fonts[i];\n                    let family = font.family;\n\n                    if (family === this.state.font) {\n                        const variants = font.variants.filter(weight => weight.length < 4 || weight === \"regular\");\n                        const regularIdx = variants.indexOf(\"regular\");\n\n                        if (regularIdx !== null) variants[regularIdx] = \"400\";\n                        if (family.split(\" \").length > 1) family = family.split(\" \").join(\"+\");\n                        \n                        i === 0 ? string += `family=${family}` : string += `&family=${family}`;\n                        string += `:wght@${variants.join(\";\")}`;\n\n                        this.setState({ category: font.category });\n                    }\n                }\n\n                href = href.join(string);\n\n                let link = document.createElement(\"link\");\n                link.href = href;\n                link.rel = \"stylesheet\";\n                link.classList.add(\"google-fonts-link\");\n                document.getElementsByTagName(\"head\")[0].appendChild(link);\n            });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { font, fonts } = this.state;\n\n        if (prevState.font !== font) {\n            let weights;\n            let newHref = [`https://fonts.googleapis.com/css2?`, `&display=swap`];\n            let string = \"\";\n\n            for (let i = 0; i < fonts.length; i++) {\n                    let family = fonts[i].family;\n                if (family === font) {\n                    const variants = fonts[i].variants;\n                    weights = variants.filter(weight => weight.length < 4 || weight === \"regular\");\n\n                    const regularIdx = weights.indexOf(\"regular\");\n\n                    if (regularIdx !== null) weights[regularIdx] = \"400\";\n\n                    if (family.split(\" \").length > 1) family = family.split(\" \").join(\"+\");\n                    i === 0 ? string += `family=${family}` : string += `&family=${family}`;\n                    string += `:wght@${weights.join(\";\")}`;\n\n                    this.setState({ weights, category: fonts[i].category });\n\n                    break;\n                }\n            }\n\n            newHref = newHref.join(string);\n            const oldLink = document.querySelector(\".google-fonts-link\");\n            oldLink.href = newHref;\n        }\n    }\n\n    handleChange = (e, field) => {\n        this.setState({ [field]: e.target.value });\n    }\n\n    handleSubmit = (e, input) => {\n        e.preventDefault();\n        const { handleSubmit, style, closeEditForm } = this.props;\n        handleSubmit(\"styles\", input, style.id);\n        closeEditForm();\n    }\n\n    render() {\n        const { type, handleSubmit, closeCreateForm, closeEditForm, code } = this.props;\n        const { text, font, size, weight, style, decoration, color, fonts, weights } = this.state;\n\n        if (code) {\n            return <Code style={this.state} />\n        } else {\n            return (\n                <form>\n                    <div className=\"form-style\">\n                        <div>\n                            <i className=\"fas fa-font\"></i>\n                            <select\n                                className=\"font-select\" value={font}\n                                onChange={e => this.setState({ font: e.target.value })}>\n                                {\n                                    fonts\n                                    ? \n                                        fonts.map((font, i) => (\n                                            <option key={`font-option-${i}`}>\n                                                {font.family}\n                                            </option>\n                                        ))\n                                    : null\n                                }\n                            </select>\n                        </div>\n                        <div>\n                            <span className=\"material-icons\">\n                                format_size\n                            </span>\n                            <input\n                                className=\"size-input\"\n                                value={size}\n                                onChange={e => this.setState({ size: e.target.value })}\n                                type=\"text\"\n                                maxLength=\"4\"\n                                spellCheck=\"false\"\n                            />\n                        </div>\n                        <div>\n                            <i className=\"fas fa-bold\"></i>\n                            <select\n                                value={weight}\n                                onChange={e => this.setState({ weight: e.target.value })}>\n                                {\n                                    weights\n                                    ?\n                                        this.state.weights.map((weight, i) => (\n                                            <option key={`weight-option-${i}`}>\n                                                {weight}\n                                            </option>\n                                        ))\n                                    : null\n                                }\n                            </select>\n                        </div>\n                        <div className=\"font-style-icon\">\n                            <i\n                                className=\"fas fa-italic\"\n                                style={{ color: style === \"italic\" ? \"#0081ff\" : \"\" }}\n                                onClick={() => this.setState({ style: style === \"normal\" ? \"italic\" : \"normal\" })}>\n                            </i>\n                            <i\n                                className=\"fas fa-underline\"\n                                style={{ color: decoration === \"underline\" ? \"#0081ff\" : \"\" }}\n                                onClick={() => this.setState({ decoration: decoration === \"underline\" ? \"none\" : \"underline\" })}>\n                            </i>\n                        </div>\n                        <div className=\"color-input-form\">\n                            <i className=\"fas fa-palette\"></i>\n                            #\n                            <input\n                                className=\"color-input\"\n                                type=\"text\"\n                                placeholder=\"000000\"\n                                maxLength=\"6\"\n                                spellCheck=\"false\"\n                                value={color}\n                                onChange={e => this.setState({ color: e.target.value })}\n                            />\n                        </div>\n                    </div>\n                    <textarea\n                        ref={this.textarea}\n                        placeholder=\"Add text\"\n                        value={text}\n                        onChange={e => this.handleChange(e, \"text\")}\n                        spellCheck=\"false\"\n                        style={{\n                            fontFamily: font,\n                            fontSize: size,\n                            fontWeight: weight,\n                            fontStyle: style,\n                            textDecoration: decoration,\n                            color: \"#\" + color\n                        }}\n                    />\n                    {\n                        type === \"create\"\n                            ?\n                                <div className=\"cancel-save-btn\">\n                                    <button onClick={closeCreateForm}>\n                                        Cancel\n                                    </button>\n                                    <button onClick={() => handleSubmit(\"styles\", this.state)}>\n                                        Save\n                                    </button>\n                                </div>\n                            :\n                                <div className=\"cancel-save-btn\">\n                                    <button onClick={closeEditForm}>\n                                        Cancel\n                                    </button>\n                                    <button onClick={e => this.handleSubmit(e, this.state)}>\n                                        Save\n                                    </button>\n                                </div>\n                    }\n                </form>\n            )\n        }\n    }\n}","import React from 'react';\nimport './style-form.css';\nimport Textarea from './textarea';\n\nexport default class StyleForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            code: false\n        };\n    }\n\n    toggleCode() {\n        this.setState({ code: !this.state.code });\n    }\n    \n    render() {\n        const { type, handleSubmit, closeCreateForm, closeEditForm, style } = this.props;\n        const { code } = this.state;\n\n        return (\n            <div className=\"form-container\">\n                <div className=\"form-header\">\n                    <ul>\n                        <li \n                            className={!code ? \"active\" : \"\"}\n                            onClick={() => this.setState({ code: false })}>\n                            {type === \"create\" ? \"Add Style\" : \"Edit Style\"}\n                        </li>\n                        <li className={code ? \"active\" : \"\"}\n                            onClick={() => this.setState({ code: true })}>\n                            Code\n                        </li>\n                        <li></li>\n                    </ul>\n                </div>\n                <Textarea \n                    handleSubmit={handleSubmit}\n                    closeCreateForm={closeCreateForm}\n                    closeEditForm={closeEditForm}\n                    type={type}\n                    style={style}\n                    code={code}\n                />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './style.css';\nimport StyleForm from '../form/style-form';\n\nexport default class Style extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            editing: false\n        };\n    }\n\n    closeEditForm = () => {\n        this.setState({ editing: false });\n    }\n\n    render() {\n\n        const { style, remove, handleSubmit } = this.props;\n\n        return (\n            <>\n                {\n                    this.state.editing\n                        ?\n                            <StyleForm \n                                type=\"edit\" \n                                style={style} \n                                closeEditForm={this.closeEditForm} \n                                handleSubmit={handleSubmit}\n                            />\n                        :\n                            <div className=\"style\">\n                                <div className=\"edit-delete-style\">\n                                    <button onClick={() => this.setState({ editing: true })}>\n                                        Edit\n                                    </button>\n                                    <button onClick={() => remove(style.id)}>\n                                        Delete\n                                    </button>\n                                </div>\n                                <span\n                                    style={{\n                                        fontFamily: style.font,\n                                        fontSize: style.size,\n                                        fontWeight: style.weight,\n                                        fontStyle: style.style,\n                                        textDecoration: style.decoration,\n                                        color: \"#\" + style.color\n                                    }}>\n                                    {style.text}\n                                </span>\n                            </div>\n                }\n            </>\n        )\n    }\n}","import React from 'react';\nimport Style from './style';\nimport './style-list.css';\n\nexport const StyleList = props => (\n    <div className=\"style-list\">\n        {\n            props.styles.map(({ style }, i) =>\n                <Style\n                    key={`style-${i}`}\n                    style={style}\n                    remove={props.remove}\n                    handleSubmit={props.handleSubmit}\n                />\n            )\n        }\n    </div>\n)","import React from 'react';\nimport './color-form.css';\n\nexport default class ColorForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            color: \"\"\n        };\n\n        this.textarea = React.createRef();\n    }\n\n    componentDidMount() {\n        this.textarea.current.focus();\n    }\n\n    render() {\n        const { handleSubmit, handleClose } = this.props;\n        const { color } = this.state;\n\n        return (\n            <div className=\"add-color\">\n                <div\n                    className=\"colored\"\n                    style={{ backgroundColor: `#${color}` }}>\n                </div>\n                <div className=\"add-color-form\">\n                    <div className=\"color-code\">\n                        #\n                        <input\n                            ref={this.textarea}\n                            type=\"text\"\n                            spellCheck=\"false\"\n                            placeholder=\"000000\"\n                            maxLength=\"6\"\n                            onChange={e => this.setState({ color: e.target.value })}\n                            value={color}\n                            onKeyDown={e => e.key === \"Enter\" \n                                ? (handleSubmit(\"colors\", color), handleClose()) \n                                : null}\n                        />\n                        <i\n                            className=\"fas fa-times\"\n                            onClick={handleClose}>\n                        </i>\n                    </div>\n                    <span className=\"color-code-instruction\">Press enter to save.</span>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './color.css';\n\nexport default class Color extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        };\n    }\n\n    render() {\n        const { color } = this.props;\n        return (\n            <div \n                className=\"colored\"\n                style={{ backgroundColor: `#${color.value}` }}>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './color-list.css';\nimport ColorForm from '../form/color-form';\nimport Color from './color';\n\nexport default class ColorList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            adding: false\n        };\n    }\n\n    handleClose = () => {\n        this.setState({ adding: false });\n    }\n\n    render() {\n        const { colors } = this.props;\n\n        return (\n            <div className=\"color-list\">\n                {\n                    colors.map(({ color }, i) =>\n                        <Color\n                            key={`color-${i}`}\n                            color={color}\n                        />\n                    )\n                }\n                {\n                    this.state.adding\n                        ? \n                            <ColorForm \n                                handleClose={this.handleClose}\n                                handleSubmit={this.props.handleSubmit}\n                            />\n                        :\n                            <div className=\"add-color\"\n                                onClick={() => this.setState({ adding: true })}>\n                                <i className=\"fas fa-plus\"></i>\n                            </div> \n                }\n            </div>\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport './reset.css';\nimport { TopNav } from './components/header/top-nav';\nimport { SearchBar } from './components/header/search-bar';\nimport StyleForm from './components/form/style-form';\nimport { StyleList } from './components/style-list/style-list';\nimport ColorList from './components/color-list/color-list';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      styles: [],\n      colors: [],\n      searchText: \"\",\n      creating: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ \n      styles: JSON.parse(localStorage.getItem(\"styles\")) || [],\n      colors: JSON.parse(localStorage.getItem(\"colors\")) || []\n    });\n  }\n\n  handleChange = e => {\n    this.setState({ searchText: e.target.value });\n  }\n\n  handleSubmit = (type, input, styleId=null) => {\n      const key = this.state[type];\n      let id = styleId !== null ? styleId : key.length;\n      let value;\n\n      if (styleId === null) {\n        for (let i = 0; i < key.length; i++) {\n          if (key[i].id !== i) id = i;\n        }\n      }\n\n    if (type === \"styles\") {\n      const { text, font, size, weight, style, decoration, color } = input;\n\n      value = {\n        id,\n        text: text,\n        font: font,\n        size: size,\n        weight: weight,\n        style: style,\n        decoration: decoration,\n        color: color\n      };\n    } else {\n      value = { id, value: input };\n    }\n\n      if (styleId !== null) {\n        for (let i = 0; i < key.length; i++) {\n          if (key[i].id === id) key[i] = value;\n        }\n      } else { \n        key.push(value);\n      }\n\n      localStorage.setItem(type, JSON.stringify(key));\n      this.setState({ [type]: key });\n      if (type === \"styles\" && styleId === null) this.closeCreateForm();\n  }\n\n  closeCreateForm = () => {\n    this.setState({ creating: false });\n  }\n\n  delete = id => {\n    const styles = this.state.styles;\n\n    for (let i = 0; i < styles.length; i++) {\n      if (styles[i] && styles[i].id === id) delete styles[i];\n    }\n    \n    const filteredStyles = styles.filter(style => {\n      return style !== null;\n    });\n\n    this.setState({ styles: filteredStyles });\n    localStorage.setItem(\"styles\", JSON.stringify(filteredStyles));\n  }\n\n  render() {\n    const filteredStyles = [];\n    const filteredColors = [];\n    const { creating, styles, colors } = this.state;\n\n    styles.forEach((style, id) => {\n      if (style) {\n        if (style.text.toLowerCase().includes(this.state.searchText.toLowerCase())) {\n          filteredStyles.push({ id, style });\n        }\n      }\n    });\n\n    colors.forEach((color, id) => {\n      if (color) {\n        if (color.value.toLowerCase().includes(this.state.searchText.toLowerCase())) {\n          filteredColors.push({ id, color });\n        }\n      }\n    });\n\n    return (\n      <>\n        <TopNav />\n        <SearchBar handleChange={this.handleChange} />\n        <div className=\"main-container\">\n          <div className=\"colors\">\n            <h1>Colors</h1>\n            <ColorList \n              colors={filteredColors}\n              handleSubmit={this.handleSubmit} />\n          </div>\n          <div className=\"styles\">\n            <h1>Fonts</h1>\n            {\n              !creating && styles.length < 1\n                ? <div className=\"empty-style\">No styles to show</div>\n                : null\n            }\n            {\n              creating\n                ? \n                  <StyleForm\n                    type=\"create\"\n                    closeCreateForm={this.closeCreateForm}\n                    handleSubmit={this.handleSubmit}\n                  />\n                :\n                  <div className=\"add-style-btn\">\n                    <button\n                      onClick={() => this.setState({ creating: true })}>\n                      Add\n                    </button>\n                  </div>\n            }\n            <StyleList\n              styles={filteredStyles.reverse()}\n              remove={this.delete}\n              handleSubmit={this.handleSubmit}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}